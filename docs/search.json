[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LoggingDiversity",
    "section": "",
    "text": "Introduction\nLoggingDiversity is a sub-project of the BioForest project aimed at studying the Interactions between tree biodiversity, forest dynamics and climate in managed tropical forests with a pan-tropical approach. Specifically, LoggingDiversity focus on the effects of logging disturbance on tropical forest diversity - a global assessment with the three following questions:"
  },
  {
    "objectID": "index.html#project",
    "href": "index.html#project",
    "title": "LoggingDiversity",
    "section": "Project",
    "text": "Project\nLoggingDiversity includes all codes to access the data (in data/) & analyse the data (files.qmd) with associated documentation and figures. Intermediary files and outputs can be accessed in outputs/. The project takes advantage of renv to manage the R environment for enhanced reproducibility."
  },
  {
    "objectID": "index.html#contribution",
    "href": "index.html#contribution",
    "title": "LoggingDiversity",
    "section": "Contribution",
    "text": "Contribution\nYou can contribute to the project by forking the repository on github and cloning the fork to your machine using several options, including GitHub desktop GUI. Access to the data is limited and can be requested by emailing people from the core group (see below). Further informations on contribution are detailed in the online document: https://bioforest-project.github.io/LoggingDiversity/98_contributing.html."
  },
  {
    "objectID": "index.html#help",
    "href": "index.html#help",
    "title": "LoggingDiversity",
    "section": "Help",
    "text": "Help\nPlease preferentially create an issue on GitHub for any questions, bugs or help needed regarding LoggingDiversity: https://github.com/Bioforest-project/LoggingDiversity/issues . You may however reach us by mail with people from the core group (see below)."
  },
  {
    "objectID": "index.html#core-group",
    "href": "index.html#core-group",
    "title": "LoggingDiversity",
    "section": "Core group",
    "text": "Core group\n\nMithila Unkule (mithila.unkule@fondationbiodiversite.fr)\nSylvain Schmitt (sylvain.schmitt@cirad.fr)\nGenoveva Gatti (genogatti@gmail.com)\nDavid Burslem (d.burslem@abdn.ac.uk)\nAndes Hamuraby Rozak (andes.hamuraby.rozak@brin.go.id)\nNatalia Bedrij (nabedrij@gmail.com)\nVerginia Wortel (wortelv@gmail.com)\n\nThe whole group consist of participants to the Bioforest project."
  },
  {
    "objectID": "01_ideas.html",
    "href": "01_ideas.html",
    "title": "Ideas",
    "section": "",
    "text": "Framework: Tree diversity declines initially in response to logging, but then increases through time to a maximum value, after which it then declines in late succession. Tree diversity also shows a non-linear response to increased intensity of logging (proportion of biomass or basal area damaged and/or removed)): lightly logged forests show a transient increase in tree diversity, but more intensively logged forests show a strong negative effect on diversity, which recovers through time to a maximum. Therefore a three-dimensional plot of diversity (z axis) against time and logging intensity/damage shows a peak in the centre of the 3D space. In very heavily logged forests, the recovery of tree diversity takes longer and the maximum of diversity at the mid-point succession may not be observed, indicative of a dampening of the response. Logging intensity moderates/dampens the change in tree diversity through time."
  },
  {
    "objectID": "10_data.html",
    "href": "10_data.html",
    "title": "Data",
    "section": "",
    "text": "The part with all data:\n\nSites and plots\nLogging\nAncillary\n\nlandscape\nClimate\nSoil\nDisturbances\nFunctional traits\nPhylogeny\n\n\n\nTo further describe."
  },
  {
    "objectID": "11_plots.html#paracou",
    "href": "11_plots.html#paracou",
    "title": "Plots",
    "section": "Paracou",
    "text": "Paracou\nParacou has missing inventory for Subplot 1 in Plot 15 for the year 2010.\n\n\nCode\nlist.files(\"data/harmonized_datasets_ss\", \n                      full.names = TRUE, pattern = \"paracou\") %&gt;% \n  lapply(read_csv, \n         col_types = cols(TreeFieldNum = col_character(),\n                          IdTree = col_character(),\n                          TreeFieldNumOriginal = col_character(),\n                          Site = col_character()\n                          )) %&gt;% \n  bind_rows() %&gt;% \n  filter(Plot == 15, Year == 2010) %&gt;% \n  ggplot(aes(XTreeUTM, YTreeUTM)) +\n  geom_point() +\n  theme_bw() +\n  coord_fixed() +\n  ggtitle(\"Paracou Plot 15\", \"2010\")\n\n\n\n\n\nCaption.\n\n\n\n\nDue to the small plot size they are more variable and less representative than the whole plot area individually, with Subplot 1 having always less individuals and basal area than the others.\n\n\nCode\nlist.files(\"data/harmonized_datasets_ss\", \n                      full.names = TRUE, pattern = \"paracou\") %&gt;% \n  lapply(read_csv, \n         col_types = cols(TreeFieldNum = col_character(),\n                          IdTree = col_character(),\n                          TreeFieldNumOriginal = col_character(),\n                          Site = col_character()\n                          )) %&gt;% \n  bind_rows() %&gt;% \n  filter(Plot == 15) %&gt;% \n  filter(LifeStatus) %&gt;% \n  group_by(Year, Plot, PlotArea, Subplot, SubplotArea) %&gt;% \n  summarise(abundance = n(),\n            ba = sum((Diameter/2)^2*pi)/10^4) %&gt;% \n  gather(variable, subplot_value, -Year, \n         -Plot, -PlotArea, -Subplot, -SubplotArea) %&gt;% \n  group_by(Year, Plot, PlotArea, variable) %&gt;% \n  mutate(plot_value = sum(subplot_value), \n         SubplotArea = unique(SubplotArea)) %&gt;% \n  ungroup() %&gt;% \n  mutate(plot_value = plot_value/PlotArea,\n         subplot_value = subplot_value/SubplotArea) %&gt;% \n  mutate(plot_value = ifelse(Year == 2010, NA, plot_value)) %&gt;% \n  ggplot(aes(plot_value, subplot_value, col = Year)) +\n  geom_point() +\n  theme_bw() +\n  geom_abline() +\n  scale_color_viridis_c() +\n  ggpubr::stat_cor() +\n  ggpubr::stat_regline_equation(label.y.npc = 0.8) +\n  facet_wrap(~ variable, scales = \"free\") +\n  ggtitle(\"Paracou Plot 15\")\n\n\n\n\n\nCaption.\n\n\n\n\nBut if we use the mean across the three other plots we have a pretty good relationship between the mean value across three plots and the total plot value.\n\n\nCode\nlist.files(\"data/harmonized_datasets_ss\", \n                      full.names = TRUE, pattern = \"paracou\") %&gt;% \n  lapply(read_csv, \n         col_types = cols(TreeFieldNum = col_character(),\n                          IdTree = col_character(),\n                          TreeFieldNumOriginal = col_character(),\n                          Site = col_character()\n                          )) %&gt;% \n  bind_rows() %&gt;% \n  filter(Plot == 15) %&gt;% \n  filter(LifeStatus) %&gt;% \n  group_by(Year, Plot, PlotArea, Subplot, SubplotArea) %&gt;% \n  summarise(abundance = n(),\n            ba = sum((Diameter/2)^2*pi)/10^4) %&gt;% \n   gather(variable, subplot_value, -Year, \n         -Plot, -PlotArea, -Subplot, -SubplotArea) %&gt;% \n  group_by(Year, Plot, PlotArea, variable) %&gt;% \n  mutate(plot_value = sum(subplot_value), \n         SubplotArea = unique(SubplotArea)) %&gt;% \n ungroup() %&gt;% \n  mutate(plot_value = plot_value/PlotArea,\n         subplot_value = subplot_value/SubplotArea) %&gt;% \n  mutate(plot_value = ifelse(Year == 2010, NA, plot_value)) %&gt;% \n  filter(Subplot != 1) %&gt;%\n  group_by(Year, Plot, PlotArea, variable, plot_value) %&gt;% \n  summarise(three_subplot_mean_value = mean(subplot_value)) %&gt;% \n  ggplot(aes(three_subplot_mean_value, plot_value, col = Year)) +\n  theme_bw() +\n  geom_abline() +\n  geom_smooth(method = \"lm\", se = FALSE, col = \"lightgrey\") +\n  geom_point() +\n  scale_color_viridis_c() +\n  ggpubr::stat_cor() +\n  ggpubr::stat_regline_equation(label.y.npc = 0.8) +\n  facet_wrap(~ variable, scales = \"free\") +\n  ggtitle(\"Paracou Plot 15\")\n\n\n\n\n\nCaption.\n\n\n\n\nUsing the equations we obtain the following values:\n\n\nCode\nlist.files(\"data/harmonized_datasets_ss\", \n                      full.names = TRUE, pattern = \"paracou\") %&gt;% \n  lapply(read_csv, \n         col_types = cols(TreeFieldNum = col_character(),\n                          IdTree = col_character(),\n                          TreeFieldNumOriginal = col_character(),\n                          Site = col_character()\n                          )) %&gt;% \n  bind_rows() %&gt;% \n  filter(Plot == 15, Year == 2010) %&gt;% \n  filter(LifeStatus) %&gt;% \n  group_by(Year, Plot, Subplot, SubplotArea) %&gt;% \n  summarise(abundance = n()/SubplotArea,\n            ba = sum((Diameter/2)^2*pi)/10^4/SubplotArea) %&gt;% \n  group_by(Year, Plot) %&gt;% \n  summarise(abundance = -45+mean(abundance),\n            ba = 5.4+0.81*mean(ba)) %&gt;% \n  knitr::kable()\n\n\n\n\n\nYear\nPlot\nabundance\nba\n\n\n\n\n2010\n15\n658.01\n31.9271\n\n\n\n\n\nWhich resulted in the following basal area trajectories for Paracou defining damages per plot as:\n\\[\n\\Delta BA = \\frac { \\frac 1 {N_{year~prel}} \\times \\sum_{y=y_min}^{y=0} BA_y}{\\frac 15 \\times min(BA_y|y\\in[1:5])}\n\\]\n\n\nCode\nparacou &lt;- list.files(\"data/harmonized_datasets_ss\", \n                      full.names = TRUE, pattern = \"paracou\") %&gt;% \n  lapply(read_csv, \n         col_types = cols(TreeFieldNum = col_character(),\n                          IdTree = col_character(),\n                          TreeFieldNumOriginal = col_character(),\n                          Site = col_character()\n                          )) %&gt;% \n  bind_rows() %&gt;% \n  filter(LifeStatus) %&gt;% \n  select(Site, Year, Plot, PlotArea, Family, Genus, Species, Diameter) %&gt;% \n  mutate(diameter_class = ifelse(Diameter &lt; 30, 10, 30)) %&gt;% \n  mutate(diameter_class = ifelse(Diameter &lt; 80, diameter_class, 80)) %&gt;% \n  group_by(Site, Year, Plot, PlotArea, Family, Genus, Species, diameter_class) %&gt;% \n  summarise(abundance = n()/unique(PlotArea),\n            ba = sum((Diameter/2)^2*pi)/10^4/unique(PlotArea)) %&gt;%\n  ungroup() %&gt;% \n  rename_all(tolower) %&gt;% \n  rename(area = plotarea) %&gt;% \n  mutate(genus = gsub(\"Indet.\", \"\", genus)) %&gt;% \n  mutate(species = gsub(\"Indet.\", \"undet\", species)) %&gt;% \n  mutate(rel_year = year - 1986) %&gt;% \n  filter(paste(plot, year) != \"15 2010\")\ndelta_ba &lt;- paracou %&gt;% \n  group_by(plot, rel_year) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  filter(rel_year &lt; 6) %&gt;% \n  group_by(plot, post = as.numeric(rel_year &gt; 0)) %&gt;% \n  summarise(ba_mean = mean(ba), ba_min = min(ba)) %&gt;% \n  gather(metric, value, -plot, -post) %&gt;% \n  mutate(metric = paste0(metric, \"_\", post)) %&gt;% \n  select(-post) %&gt;% \n  pivot_wider(names_from = metric, values_from = value) %&gt;% \n  mutate(delta_ba = ba_mean_0 - ba_min_1) %&gt;% \n  mutate(delta_ba = ifelse(delta_ba &lt; 1, 0, delta_ba)) %&gt;% \n  mutate(delta_ba_pct = delta_ba/ba_mean_0*100) %&gt;% \n  rename(ba_pre = ba_mean_0, ba_post = ba_min_1) %&gt;% \n  select(plot, ba_pre, ba_post, delta_ba, delta_ba_pct)\nparacou &lt;- paracou %&gt;% \n  left_join(delta_ba) %&gt;% \n  mutate_at(c(\"delta_ba\", \"delta_ba_pct\"), ~ ifelse(is.na(.), 0, .))\nwrite_tsv(paracou, \"outputs/paracou.tsv\")\n\n\n\n\nCode\nread_tsv(\"outputs/paracou.tsv\") %&gt;% \n  group_by(site, year, rel_year, delta_ba, plot) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  bind_rows(\n    data_frame(site = \"Paracou\", year = 2010, rel_year = 24,\n               plot = 15, ba = 31.9271, delta_ba = 0)\n    ) %&gt;%\n  ggplot(aes(rel_year, ba, col = delta_ba, group = plot)) +\n  geom_line() +\n  geom_point() +\n  theme_bw() +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +  \n  xlab(\"\") + \n  ylab(expression(\"Basal area of tree \" &gt;=10 ~\"cm dbh [\"~m^{2}~ha^{-~1}~\"]\")) +\n  scale_color_viridis_c(expression(Delta[BA]))\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "11_plots.html#missiones",
    "href": "11_plots.html#missiones",
    "title": "Plots",
    "section": "Missiones",
    "text": "Missiones\nMissiones has missing inventory for Subplot 4 & 5 in Plot 19 for the year 2003 and 2004 which are quite important to define the disturbance intensity in the 5 years following the logging.\n\n\nCode\nread_csv(\"data/harmonized_datasets_ss/output_MISIONES.csv\") %&gt;% \n  filter(Plot == 19, Year &lt; 2010) %&gt;% \n  filter(LifeStatus) %&gt;% \n  filter(!(Family %in% c(\"muerto\", \"ND\"))) %&gt;% \n  ggplot(aes(XTreeUTM, YTreeUTM, col = as.character(Subplot))) +\n  geom_point() +\n  theme_bw() +\n  coord_fixed() +\n  facet_wrap(~ Year) +\n  ggtitle(\"Missiones Plot 19\") +\n  theme(axis.title = element_blank(), axis.text = element_blank(), \n        axis.ticks = element_blank()) +\n  scale_color_discrete(\"Subplot\")\n\n\n\n\n\nCaption.\n\n\n\n\nDue to the small plot size they are more variable and less representative than the whole plot area individually, even if better in Missiones than Paracou.\n\n\nCode\nread_csv(\"data/harmonized_datasets_ss/output_MISIONES.csv\") %&gt;% \n  filter(Plot == 19, Year != 2018) %&gt;% \n  filter(LifeStatus) %&gt;% \n  filter(!(Family %in% c(\"muerto\", \"ND\"))) %&gt;% \n  filter(!is.na(Diameter)) %&gt;% \n  group_by(Year, Plot, PlotArea, Subplot, SubplotArea) %&gt;% \n  summarise(abundance = n(),\n            ba = sum((Diameter/2)^2*pi)/10^4) %&gt;% \n  gather(variable, subplot_value, -Year, \n         -Plot, -PlotArea, -Subplot, -SubplotArea) %&gt;% \n  group_by(Year, Plot, PlotArea, variable) %&gt;% \n  mutate(plot_value = sum(subplot_value, na.omit = T), \n         SubplotArea = unique(SubplotArea)/10000) %&gt;% \n  ungroup() %&gt;% \n  mutate(plot_value = plot_value/PlotArea,\n         subplot_value = subplot_value/SubplotArea) %&gt;% \n  mutate(plot_value = ifelse(Year %in% 2003:2004, NA, plot_value)) %&gt;% \n  ggplot(aes(plot_value, subplot_value, col = Year)) +\n  geom_point() +\n  theme_bw() +\n  geom_abline() +\n  scale_color_viridis_c() +\n  ggpubr::stat_cor() +\n  ggpubr::stat_regline_equation(label.y.npc = 0.8) +\n  facet_wrap(~ variable, scales = \"free\") +\n  ggtitle(\"Missiones Plot 19\")\n\n\n\n\n\nCaption.\n\n\n\n\nBut if we use the mean across the three other plots we have an almost perfet relationship between the mean value across three plots and the total plot value.\n\n\nCode\nread_csv(\"data/harmonized_datasets_ss/output_MISIONES.csv\") %&gt;% \n  filter(Plot == 19, Year != 2018) %&gt;% \n  filter(LifeStatus) %&gt;% \n  filter(!(Family %in% c(\"muerto\", \"ND\"))) %&gt;% \n  filter(!is.na(Diameter)) %&gt;% \n  group_by(Year, Plot, PlotArea, Subplot, SubplotArea) %&gt;% \n  summarise(abundance = n(),\n            ba = sum((Diameter/2)^2*pi)/10^4) %&gt;% \n   gather(variable, subplot_value, -Year, \n         -Plot, -PlotArea, -Subplot, -SubplotArea) %&gt;% \n  group_by(Year, Plot, PlotArea, variable) %&gt;% \n  mutate(plot_value = sum(subplot_value), \n         SubplotArea = unique(SubplotArea)/10000) %&gt;% \n  ungroup() %&gt;% \n  mutate(plot_value = plot_value/PlotArea,\n         subplot_value = subplot_value/SubplotArea) %&gt;% \n  mutate(plot_value = ifelse(Year %in% 2003:2004, NA, plot_value)) %&gt;% \n  filter(Subplot != 4, Subplot != 5) %&gt;%\n  group_by(Year, Plot, PlotArea, variable, plot_value) %&gt;% \n  summarise(three_subplot_mean_value = mean(subplot_value)) %&gt;% \n  ggplot(aes(three_subplot_mean_value, plot_value, col = Year)) +\n  theme_bw() +\n  geom_abline() +\n  geom_smooth(method = \"lm\", se = FALSE, col = \"lightgrey\") +\n  geom_point() +\n  scale_color_viridis_c() +\n  ggpubr::stat_cor() +\n  ggpubr::stat_regline_equation(label.y.npc = 0.8) +\n  facet_wrap(~ variable, scales = \"free\") +\n  ggtitle(\"Missiones Plot 19\")\n\n\n\n\n\nCaption.\n\n\n\n\nUsing the equations we obtain the following values:\n\n\nCode\nread_csv(\"data/harmonized_datasets_ss/output_MISIONES.csv\") %&gt;% \n  filter(Plot == 19, Year %in% 2003:2004) %&gt;% \n  filter(Subplot != 4, Subplot != 5) %&gt;%\n  filter(LifeStatus) %&gt;% \n  filter(!(Family %in% c(\"muerto\", \"ND\"))) %&gt;% \n  filter(!is.na(Diameter)) %&gt;% \n  filter(LifeStatus) %&gt;% \n  group_by(Year, Plot, Subplot, SubplotArea) %&gt;% \n  summarise(abundance = n()/(SubplotArea/10000),\n            ba = sum((Diameter/2)^2*pi)/10^4/(SubplotArea/10000)) %&gt;% \n  group_by(Year, Plot) %&gt;% \n  summarise(abundance = 67+0.87*mean(abundance),\n            ba = 7.1+0.62*mean(ba)) %&gt;% \n  knitr::kable()\n\n\n\n\n\nYear\nPlot\nabundance\nba\n\n\n\n\n2003\n19\n320.2457\n21.46215\n\n\n2004\n19\n306.5957\n20.86246\n\n\n\n\n\nWhich resulted in the following basal area trajectories for Missiones defining damages per plot as:\n\\[\n\\Delta BA = \\frac { \\frac 1 {N_{year~prel}} \\times \\sum_{y=y_min}^{y=0} BA_y}{\\frac 15 \\times min(BA_y|y\\in[1:5])}\n\\]\n\nNote that the lowest value of BA for plot 19 is now occurring before the corrected years.\n\n\n\nCode\nmissiones &lt;- read_csv(\"data/harmonized_datasets_ss/output_MISIONES.csv\") %&gt;% \n  filter(LifeStatus) %&gt;% \n  filter(!(Family %in% c(\"muerto\", \"ND\"))) %&gt;% \n  select(Site, Year, Plot, PlotArea, Family, ScientificName, Diameter) %&gt;% \n  mutate(Family = gsub(\"No determinado\", \"undet\", Family)) %&gt;% \n  mutate(ScientificName = gsub(\"No Determinado\", \"undet undet\", ScientificName)) %&gt;% \n  separate(ScientificName, c(\"Genus\", \"Species\")) %&gt;% \n  mutate(Species = ifelse(is.na(Species), \"undet\", Species)) %&gt;%  \n  mutate(Year = ifelse(Year == 2018, 2019, Year)) %&gt;% \n  mutate(diameter_class = ifelse(Diameter &lt; 30, 10, 30)) %&gt;% \n  mutate(diameter_class = ifelse(Diameter &lt; 80, diameter_class, 80)) %&gt;% \n  filter(!is.na(diameter_class)) %&gt;% \n  group_by(Site, Year, Plot, PlotArea, Family, Genus, Species, diameter_class) %&gt;% \n  summarise(abundance = n()/unique(PlotArea),\n            ba = sum((Diameter/2)^2*pi)/10^4/unique(PlotArea)) %&gt;%\n  rename_all(tolower) %&gt;% \n  rename(area = plotarea) %&gt;% \n  mutate(rel_year = year - 1999) %&gt;% \n  filter(!(paste(plot, year) %in% c(\"19 2003\", \"19 2004\")))\ndelta_ba &lt;- missiones %&gt;% \n  group_by(plot, rel_year) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  filter(rel_year &lt; 6) %&gt;% \n  group_by(plot, post = as.numeric(rel_year &gt; 0)) %&gt;% \n  summarise(ba_mean = mean(ba), ba_min = min(ba)) %&gt;% \n  gather(metric, value, -plot, -post) %&gt;% \n  mutate(metric = paste0(metric, \"_\", post)) %&gt;% \n  select(-post) %&gt;% \n  pivot_wider(names_from = metric, values_from = value) %&gt;% \n  mutate(delta_ba = ba_mean_0 - ba_min_1) %&gt;% \n  mutate(delta_ba = ifelse(delta_ba &lt; 1, 0, delta_ba)) %&gt;% \n  mutate(delta_ba_pct = delta_ba/ba_mean_0*100) %&gt;% \n  rename(ba_pre = ba_mean_0, ba_post = ba_min_1) %&gt;% \n  select(plot, ba_pre, ba_post, delta_ba, delta_ba_pct)\nmissiones &lt;- missiones %&gt;% \n  left_join(delta_ba) %&gt;% \n  mutate_at(c(\"delta_ba\", \"delta_ba_pct\"), ~ ifelse(is.na(.), 0, .))\nwrite_tsv(missiones, \"outputs/missiones.tsv\")\n\n\n\n\nCode\nread_tsv(\"outputs/missiones.tsv\") %&gt;% \n  group_by(site, year, rel_year, delta_ba, plot) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  filter(!(paste(plot, year) %in% c(\"19 2003\", \"19 2004\"))) %&gt;% \n  bind_rows(\n    data_frame(site = \"Misiones\", year = 2003:2004, rel_year = 2003:2004-1999,\n               plot = 19, ba = c(21.46215, 20.86246), \n               delta_ba = 3.414185)\n  ) %&gt;%\n  ggplot(aes(rel_year, ba, col = delta_ba, group = plot)) +\n  geom_line() +\n  geom_point() +\n  theme_bw() +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +  \n  xlab(\"\") + \n  ylab(expression(\"Basal area of tree \" &gt;=10 ~\"cm dbh [\"~m^{2}~ha^{-~1}~\"]\")) +\n  scale_color_viridis_c(expression(Delta[BA]))\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "11_plots.html#kibale",
    "href": "11_plots.html#kibale",
    "title": "Plots",
    "section": "Kibale",
    "text": "Kibale\n\nKibale data miss the year of census, waiting for a fix.\n\n\n\nCode\nkibale &lt;- read_csv(\"data/harmonized_datasets_ss/output_data_kibale.csv\") %&gt;% \n  select(Site, \n         # Year, # Year is missing !\n         Plot, PlotArea, \n         # Family, # family is missing and needs to be regenerated\n         ScientificName, Diameter) %&gt;% \n  mutate(ScientificName = gsub(\"Indetermined\", \"undet undet\", ScientificName)) %&gt;% \n  separate(ScientificName, c(\"Genus\", \"Species\")) %&gt;% \n  mutate(Genus = ifelse(is.na(Genus), \"undet\", Genus)) %&gt;% \n  mutate(Species = ifelse(is.na(Species), \"undet\", Species)) %&gt;% \n  mutate(Species = ifelse(Species == \"spp\", \"undet\", Species)) %&gt;% \n  filter(!is.na(Diameter)) %&gt;% \n  filter(!is.na(Plot))\n\n\n\n\nCode\nkibale %&gt;% \n  ggplot(aes(Diameter)) +\n  geom_histogram() +\n  facet_wrap(~ Plot) +\n  theme_bw() +\n  scale_x_log10() +\n  scale_y_log10() +\n  theme(axis.text.x = element_text(angle = 45))\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "11_plots.html#malinau",
    "href": "11_plots.html#malinau",
    "title": "Plots",
    "section": "Malinau",
    "text": "Malinau\n\nMalinau data are intriguing and I am not including them in the following analyses, waiting for a discussion with PI.\n\n\n\nCode\nmalinau &lt;- read_csv(\"data/harmonized_datasets_ss/output_data_malinau.csv\") %&gt;% \n  mutate(Family = ifelse(Family %in% c(\"+\", \"unid\", \"unidentified\"),\n                          \"undet\", Family)) %&gt;% \n  mutate(Genus = ifelse(Genus %in% c(\"Indet\"),\n                          \"undet\", Genus)) %&gt;% \n  mutate(Species = ifelse(Species %in% c(\"Indet.\"),\n                          \"undet\", Species)) %&gt;% \n  select(Site, Year, Plot, PlotArea, Family, Genus, Species, Diameter) %&gt;% \n  filter(!is.na(Diameter)) %&gt;% \n  mutate(diameter_class = ifelse(Diameter &lt; 30, 10, 30)) %&gt;% \n  mutate(diameter_class = ifelse(Diameter &lt; 80, diameter_class, 80)) %&gt;% \n  group_by(Site, Year, Plot, PlotArea, Family, Genus, Species, diameter_class) %&gt;% \n  summarise(abundance = n()/unique(PlotArea),\n            ba = sum((Diameter/2)^2*pi)/10^4/unique(PlotArea)) %&gt;%\n  rename_all(tolower) %&gt;% \n  rename(area = plotarea) %&gt;% \n  mutate(rel_year = year - 1999)\ndelta_ba &lt;- malinau %&gt;% \n  group_by(plot, rel_year) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  filter(rel_year &lt; 6) %&gt;% \n  group_by(plot, post = as.numeric(rel_year &gt; 0)) %&gt;% \n  summarise(ba_mean = mean(ba), ba_min = min(ba)) %&gt;% \n  gather(metric, value, -plot, -post) %&gt;% \n  mutate(metric = paste0(metric, \"_\", post)) %&gt;% \n  select(-post) %&gt;% \n  pivot_wider(names_from = metric, values_from = value) %&gt;% \n  mutate(delta_ba = ba_mean_0 - ba_min_1) %&gt;% \n  mutate(delta_ba = ifelse(delta_ba &lt; 1, 0, delta_ba)) %&gt;% \n  mutate(delta_ba_pct = delta_ba/ba_mean_0*100) %&gt;% \n  rename(ba_pre = ba_mean_0, ba_post = ba_min_1) %&gt;% \n  select(plot, ba_pre, ba_post, delta_ba, delta_ba_pct)\nmalinau &lt;- malinau %&gt;% \n  left_join(delta_ba) %&gt;% \n  mutate_at(c(\"delta_ba\", \"delta_ba_pct\"), ~ ifelse(is.na(.), 0, .))\nwrite_tsv(malinau, \"outputs/malinau.tsv\")\n\n\n\n\nCode\nread_tsv(\"outputs/malinau.tsv\") %&gt;% \n  group_by(site, year, rel_year, delta_ba, plot) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  ggplot(aes(rel_year, ba, col = delta_ba, group = plot)) +\n  geom_line() +\n  geom_point() +\n  theme_bw() +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +  \n  xlab(\"\") + \n  ylab(expression(\"Basal area of tree \" &gt;=10 ~\"cm dbh [\"~m^{2}~ha^{-~1}~\"]\")) +\n  scale_color_viridis_c(expression(Delta[BA]))\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "11_plots.html#moju",
    "href": "11_plots.html#moju",
    "title": "Plots",
    "section": "Moju",
    "text": "Moju\n\nMoju data are intriguing and I am not including them in the following analyses, waiting for a discussion with Lucas.\n\n\n\nCode\nmoju &lt;- read_csv(\"data/harmonized_datasets_ss/output_moju.csv\", \n              locale = readr::locale(encoding = \"latin1\")) %&gt;% \n  mutate(Site = 'Moju') %&gt;% \n  filter(LifeStatus) %&gt;% \n  select(Site, Year, Plot, PlotArea, VernName, Diameter) %&gt;% \n  separate(VernName, c(\"VernName\", \"GenusSpecies\"), sep = \"\\\\[\") %&gt;% \n  select(-VernName) %&gt;% \n  mutate(GenusSpecies = gsub(\"]\", \"\", GenusSpecies)) %&gt;% \n  separate(GenusSpecies, c(\"Genus\", \"Species\")) %&gt;% \n  mutate(Species = ifelse(Genus == \"\", 'undet', Species)) %&gt;% \n  mutate(Genus = ifelse(Genus == \"\", 'undet', Genus)) %&gt;% \n  mutate(diameter_class = ifelse(Diameter &lt; 30, 10, 30)) %&gt;% \n  mutate(diameter_class = ifelse(Diameter &lt; 80, diameter_class, 80)) %&gt;% \n  filter(!is.na(diameter_class)) %&gt;% \n  group_by(Site, Year, Plot, PlotArea, Genus, Species, diameter_class) %&gt;% \n  summarise(abundance = n()/unique(PlotArea),\n            ba = sum((Diameter/2)^2*pi)/10^4/unique(PlotArea)) %&gt;%\n  rename_all(tolower) %&gt;% \n  rename(area = plotarea) %&gt;% \n  mutate(rel_year = year - 1997)\ndelta_ba &lt;- moju %&gt;% \n  group_by(plot, rel_year) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  filter(rel_year &lt; 6) %&gt;% \n  group_by(plot, post = as.numeric(rel_year &gt; 0)) %&gt;% \n  summarise(ba_mean = mean(ba), ba_min = min(ba)) %&gt;% \n  gather(metric, value, -plot, -post) %&gt;% \n  mutate(metric = paste0(metric, \"_\", post)) %&gt;% \n  select(-post) %&gt;% \n  pivot_wider(names_from = metric, values_from = value) %&gt;% \n  mutate(delta_ba = ba_mean_0 - ba_min_1) %&gt;% \n  mutate(delta_ba = ifelse(delta_ba &lt; 1, 0, delta_ba)) %&gt;% \n  mutate(delta_ba_pct = delta_ba/ba_mean_0*100) %&gt;% \n  rename(ba_pre = ba_mean_0, ba_post = ba_min_1) %&gt;% \n  select(plot, ba_pre, ba_post, delta_ba, delta_ba_pct)\nmoju &lt;- moju %&gt;% \n  left_join(delta_ba) %&gt;% \n  mutate_at(c(\"delta_ba\", \"delta_ba_pct\"), ~ ifelse(is.na(.), 0, .))\nwrite_tsv(moju, \"outputs/moju.tsv\")\n\n\n\n\nCode\nread_tsv(\"outputs/moju.tsv\") %&gt;% \n  group_by(site, year, rel_year, delta_ba, plot) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  ggplot(aes(rel_year, ba, col = delta_ba, group = plot)) +\n  geom_line() +\n  geom_point() +\n  theme_bw() +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +  \n  xlab(\"\") + \n  ylab(expression(\"Basal area of tree \" &gt;=10 ~\"cm dbh [\"~m^{2}~ha^{-~1}~\"]\")) +\n  scale_color_viridis_c(expression(Delta[BA]))\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "11_plots.html#all",
    "href": "11_plots.html#all",
    "title": "Plots",
    "section": "All",
    "text": "All\n\n\nCode\nbind_rows(\n  read_tsv(\"outputs/paracou.tsv\"),\n  read_tsv(\"outputs/missiones.tsv\")\n  # read_tsv(\"outputs/moju.tsv\")\n) %&gt;% write_tsv(\"outputs/gathered.tsv\")\n\n\nAll absolute basal area trajectories already look good but reveals large differences in predisturbance and mean basal areas across sites and plots within sites.\n\n\nCode\nread_tsv(\"outputs/gathered.tsv\") %&gt;% \n  group_by(site, year, rel_year, delta_ba, plot) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  ggplot(aes(rel_year, ba, col = delta_ba, group = paste(site, plot))) +\n  geom_line() +\n  geom_point() +\n  theme_bw() +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +  \n  xlab(\"\") + \n  ylab(expression(\"Basal area of tree \" &gt;=10 ~\"cm dbh [\"~m^{2}~ha^{-~1}~\"]\")) +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  ggtitle(\"Absolute\")\n\n\n\n\n\nCaption.\n\n\n\n\nAll basal area trajectories relative to predisturbance look very good, but this information won’t be available at every site.\n\n\nCode\nread_tsv(\"outputs/gathered.tsv\") %&gt;% \n  group_by(site, year, rel_year, delta_ba, ba_pre, plot) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  ggplot(aes(rel_year, ba/ba_pre*100, \n             col = delta_ba/ba_pre*100, \n             group = paste(site, plot))) +\n  geom_line() +\n  geom_point() +\n  theme_bw() +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +  \n  xlab(\"\") + \n  ylab(expression(\"Relative basal area of tree \" &gt;=10 ~\"cm dbh [\"~\"%\"~\"]\")) +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  ggtitle(\"Relative to predisturbance basal area\")\n\n\n\n\n\nCaption.\n\n\n\n\nAll basal area trajectories relative to mean control basal area is messy because there is a wide variation of basal area among controls.\n\nThis should be further developped and explored, maybe using a standardisation for plots within sites, to be further used with sites not having prelogging inventories. A first step could be to look at the link between control informations and prelogging informations in sites where we have both.\n\n\n\nCode\nread_tsv(\"outputs/gathered.tsv\") %&gt;% \n  group_by(site, year, rel_year, delta_ba, ba_pre, plot) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  left_join(\n    read_tsv(\"outputs/gathered.tsv\") %&gt;% \n      group_by(site, year, rel_year, delta_ba, ba_pre, plot) %&gt;%   \n      filter(delta_ba == 0) %&gt;% \n      summarise(ba = sum(ba)) %&gt;% \n      group_by(site, rel_year) %&gt;% \n      summarise(ba_control_mean = mean(ba),\n                ba_control_sd = mean(ba))\n  ) %&gt;% \n  ggplot(aes(rel_year, ba/ba_control_mean*100, \n             col = delta_ba/ba_control_mean*100, \n             group = paste(site, plot))) +\n  geom_line() +\n  geom_point() +\n  theme_bw() +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +  \n  xlab(\"\") + \n  ylab(expression(\"Relative basal area of tree \" &gt;=10 ~\"cm dbh [\"~\"%\"~\"]\")) +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  ggtitle(\"Relative to controls mean basal area\")\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "12_logging.html#treatment",
    "href": "12_logging.html#treatment",
    "title": "Logging",
    "section": "Treatment",
    "text": "Treatment\nTreatment and resulting damages are coherent in Paracou, but RIL does not seems much effective in Missiones.\n\n\nCode\nread_tsv(\"outputs/logging.tsv\") %&gt;% \n  select(site, plot, treatment, delta_ba, delta_ba_pct) %&gt;% \n  gather(variable, value, -site, -plot, -treatment) %&gt;% \n  mutate(treatment = gsub(\"_\", \" \", treatment)) %&gt;% \n  ggplot(aes(treatment, value, fill = site)) +\n  geom_boxplot() +\n  theme_bw() +\n  coord_flip() +\n  facet_wrap(~ variable, scales = \"free_x\") +\n  theme(axis.title = element_blank(), legend.position = \"bottom\")\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "12_logging.html#harvested",
    "href": "12_logging.html#harvested",
    "title": "Logging",
    "section": "Harvested",
    "text": "Harvested\n\nThere seems to be inconstancies between harvested basal area, number of trees and volume with resulting damages in maximal lost basal area in the five years. Values to be checked.\n\n\n\nCode\nread_tsv(\"outputs/logging.tsv\") %&gt;% \n  select(site, plot, treatment, delta_ba, delta_ba_pct, \n         ba_harvested, nb_trees_harvested, vol_harvested) %&gt;% \n  gather(log_var, log_val, -site, -plot, -treatment, -delta_ba, -delta_ba_pct) %&gt;% \n  na.omit() %&gt;% \n  ggplot(aes(log_val, delta_ba, col = site)) +\n  geom_point() +\n  theme_bw() +\n  coord_flip() + \n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~ log_var, scales = \"free_y\", nrow = 3)\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "12_logging.html#other-disturbances",
    "href": "12_logging.html#other-disturbances",
    "title": "Logging",
    "section": "Other disturbances",
    "text": "Other disturbances\n\nWherever available: liana infestation index, invasive species, fires, storms, etc."
  },
  {
    "objectID": "13_climate.html",
    "href": "13_climate.html",
    "title": "Climate",
    "section": "",
    "text": "Using TerraClimate (ref).\n\n\nCode\nlist.files(\"data/climate/\", full.names = TRUE) %&gt;% \n  read_tsv() %&gt;% \n  group_by(site) %&gt;% \n  mutate(month = 1:12) %&gt;% \n  mutate(aet = aet*.1, def = def*.1, pdsi = pdsi*.01, pet = pet*.1,\n         tmmn = tmmn*.1, tmmx = tmmx*.1, vpd = vpd*.01) %&gt;% \n  write_tsv(\"outputs/climate.tsv\") \n\n\n\n\nCode\nread_tsv(\"outputs/climate.tsv\") %&gt;% \n  gather(variable, value, -site, -month) %&gt;% \n  mutate(var_long = recode(variable,\n                           \"aet\" = \"Actual evapotranspiration\",\n                           \"def\" = \"Climate water deficit\",\n                           \"pdsi\" = \"Palmer Drought Severity Index\",\n                           \"pet\" = \"Potential evapotranspiration\",\n                           \"pr\" = \"Precipitation\",\n                           \"tmmn\" = \"Minimum temperature\",\n                           \"tmmx\" = \"Maximum temperature\",\n                           \"vpd\" = \"Vapor pressure deficit\")) %&gt;% \n  ggplot(aes(month, value, col = site)) +\n  geom_line() +\n  facet_wrap(~ var_long, scales = \"free_y\") +\n  xlab(\"\") + ylab(\"\") +\n  scale_x_continuous(breaks = 1:12,\n                     labels = c(\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\")) +\n  theme_bw() +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/climate.tsv\") %&gt;% \n  ggplot(aes(x = month)) +\n  geom_col(aes(y = pr/20), fill = \"grey\", col = NA) +\n  geom_line(aes(y = tmmn, col = \"maximum\")) +\n  geom_line(aes(y = tmmx, col = \"minimum\")) +\n  theme_bw() +\n  xlab(\"\") + \n  scale_x_continuous(breaks = 1:12,\n                     labels = c(\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\")) +\n  scale_y_continuous(\n    name = \"Temperature (°C)\",\n    sec.axis = sec_axis(trans = ~.*20, name = \"Precipitation (mm)\")\n  ) +\n  theme(\n    axis.title.y = element_text(color = \"black\"),\n    axis.title.y.right = element_text(color = \"grey\")\n  ) +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  facet_wrap(~ site)\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "14_soil.html",
    "href": "14_soil.html",
    "title": "Soil",
    "section": "",
    "text": "Using SoilGrids (ref).\n\n\nCode\nlist.files(\"data/soil/\", full.names = TRUE) %&gt;% \n  read_tsv() %&gt;% \n  gather(variable, value, -site) %&gt;% \n  separate(variable, c(\"variable\", \"depth\"), \"_\") %&gt;% \n  separate(depth, c(\"mindepth\", \"depth\"), \"-\") %&gt;% \n  mutate(depth = as.numeric(gsub(\"cm\", \"\", depth))) %&gt;% \n  select(-mindepth) %&gt;% \n  pivot_wider(names_from = variable, values_from = value) %&gt;% \n  mutate(\n    bdod = bdod/100,\n    cec = cec/10,\n    cfvo = cfvo/10,\n    clay = clay/10,\n    sand = sand/10,\n    silt = silt/10,\n    nitrogen = nitrogen/100,\n    phh2o = phh2o/10,\n    soc = soc/10,\n    ocd = ocd/10,\n    ocs = ocs/10\n  ) %&gt;% \n  write_tsv(\"outputs/soil.tsv\") \n\n\n\n\nCode\nread_tsv(\"outputs/soil.tsv\") %&gt;% \n  gather(variable, value, -site, -depth) %&gt;% \n  ggplot(aes(site, value, fill = depth)) +\n  geom_col(aes(group = as.factor(depth)), position = \"dodge\") +\n  facet_wrap(~ variable, scales = \"free_y\") +\n  theme_bw() +\n  theme(legend.position = \"bottom\", axis.title = element_blank()) +\n  scale_fill_viridis_c()\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/soil.tsv\") %&gt;% \n  ggplot(aes(x = sand, y = clay, z = silt, col = site)) +\n  ggtern::coord_tern(L = \"x\", T = \"y\", R = \"z\") +\n  geom_point() +\n  theme_bw() +\n  labs(\n    yarrow = \"Clay (%)\",\n    zarrow = \"Silt (%)\",\n    xarrow = \"Sand (%)\"\n  ) +\n  ggtern::theme_showarrows() +\n  ggtern::theme_hidetitles()+\n  ggtern::theme_clockwise()\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "15_landscape.html",
    "href": "15_landscape.html",
    "title": "Landscape",
    "section": "",
    "text": "Using TMF (ref).\n\n\nCode\nlist.files(\"data/landscape/\", full.names = TRUE) %&gt;% \n  read_tsv() %&gt;% \n  group_by(site, year, forest) %&gt;% \n  summarise(n = n()) %&gt;% \n  group_by(site, year) %&gt;% \n  mutate(n_tot = sum(n)) %&gt;% \n  filter(forest == 1) %&gt;% \n  summarise(intact = n/n_tot*100) %&gt;% \n  write_tsv(\"outputs/landscape.tsv\") \n\n\n\n\nCode\nread_tsv(\"outputs/landscape.tsv\") %&gt;% \n  ggplot(aes(year, intact, col = site)) +\n  geom_line() +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(\"Percentage of forest in a radius of 1-km\")\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"data/landscape/paracou_landscape.tsv\") %&gt;% \n  ggplot(aes(lon, lat, fill = as.factor(forest))) +\n  geom_raster() +\n  facet_wrap(~ year) +\n  theme_bw() +\n  coord_equal() +\n  scale_fill_manual(guide = \"none\", values = c(\"black\", \"darkgreen\")) +\n  theme(axis.text = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks = element_blank(),\n        panel.spacing = unit(0,'lines')) +\n  ggtitle(\"Paracou forest landscape\")\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "16_traits.html",
    "href": "16_traits.html",
    "title": "Traits",
    "section": "",
    "text": "Functional traits could be gathered from:\n\nLocal site data (e.g. I already have some for French Guiana, Santarem, and Uppangala)\nPublished data\nPublic data store, e.g. TRY\n\nFor instance, here is a recent functional traits data gathering and imputation that I have done for Santarem and Paracou: https://sylvainschmitt.github.io/troll_eval/12_species.html.\n\n\nCode\nknitr::include_graphics(\"https://sylvainschmitt.github.io/troll_eval/98_companion_figures_files/figure-html/ft-1.png\")\n\n\n\n\n\nFunctional composition estimated by TROLL at the Paracou and Tapajos site expressed in terms of distribution per trait and site."
  },
  {
    "objectID": "17_phylogeny.html",
    "href": "17_phylogeny.html",
    "title": "Phylogeny",
    "section": "",
    "text": "We can take advantage of the backbone phylogeny of two recently published mega-trees (Smith and Brown 2018; Zanne et al. 2013) using the V.PhyloMaker R package (Jin and Qian 2019) to build a phylogeny of studied species in case we want to add phylogenetic contrasts in our analyses. For instance, here is a phylogeny I build to look at species growth patterns in Paracou (Schmitt, Hérault, and Derroire 2023):\n\n\nCode\nknitr::include_graphics(\"https://raw.githubusercontent.com/sylvainschmitt/treegrowth/main/docs/treegrowth_files/figure-html/figall-1.png\")\n\n\n\n\n\nVariation in the growth potential of individuals and species as a function of neighbourhood crowding, taxonomic levels or across phylogeny. A. Individual growth potential (Gmaxi) is significantly decreasing with neighbourhood crowding index (NCI, =-0.99, p&lt;0.001, R2=0.102). B. The variation of individual growth potential (Gmaxi) across taxonomy show most of the variation at the individual (=0.45, Tab. 1), then explained by genus (=0.09) before species (=0.04) and family (=0.06). C. The distribution of species growth potential (Median[Gmaxi]) across the phylogeny from slow growing species in dark blue to fast growing species in yellow (log-scale) is phylogenetically structured (Pagel’s =0.78, p&lt;0.001) with a significant positive autocorrelation to a phylogenetic partistic distance below 100 (Fig. S2), corresponding to the genus level (Tab. 1).\n\n\n\n\n\n\n\n\nJin, Yi, and Hong Qian. 2019. “V.PhyloMaker: An R Package That Can Generate Very Large Phylogenies for Vascular Plants.” Ecography 42 (8): 1353–59. https://doi.org/10.1111/ecog.04434.\n\n\nSchmitt, Sylvain, Bruno Hérault, and Géraldine Derroire. 2023. “High Intraspecific Growth Variability Despite Strong Evolutionary Legacy in an Amazonian Forest.” Ecology Letters 26 (12): 2135–46. https://doi.org/10.1111/ele.14318.\n\n\nSmith, Stephen A., and Joseph W. Brown. 2018. “Constructing a Broadly Inclusive Seed Plant Phylogeny.” American Journal of Botany 105 (3): 302–14. https://doi.org/10.1002/ajb2.1019.\n\n\nZanne, Amy E., David C. Tank, William K. Cornwell, Jonathan M. Eastman, Stephen A. Smith, Richard G. FitzJohn, Daniel J. McGlinn, et al. 2013. “Three Keys to the Radiation of Angiosperms into Freezing Environments.” Nature 506 (7486): 89–92. https://doi.org/10.1038/nature12872."
  },
  {
    "objectID": "20_diversity.html",
    "href": "20_diversity.html",
    "title": "Diversity",
    "section": "",
    "text": "All diversity metrics.\n\nTo further describe."
  },
  {
    "objectID": "21_species.html#richness",
    "href": "21_species.html#richness",
    "title": "Species",
    "section": "Richness",
    "text": "Richness\nAbsolute richness can’t be compared among sites as the plot area differs.\n\nThe relation between plot area and richness not being linear, standardising it can be a bit tricky. We could explore the link between site, plot area, and prelogging diversity for that.\n\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  mutate(site = recode(site,\n                       \"Misiones\" = \"Missiones (1-ha)\",\n                       \"Paracou\" = \"Paracou (6.25-ha)\")) %&gt;% \n  ggplot(aes(rel_year, richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Rrichness)) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  ggtitle(\"Absolute\") +\n  facet_wrap(~ site, scales = \"free\")\n\n\n\n\n\nCaption.\n\n\n\n\nRichness relative to the predisturbance richness results in good trajectories among and within plots. Both sites seems to show hump-shaped trajectories with a decrease in richness in the years following the logging, followed by an increase toward a maxima. The more intense the damages the higher the hump. This is relatively easily smoothed for Paracou plots using a fourth degree polynomial.\n\nWe will need to think about relative to control for sites without prelogging inventories.\n\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  ggplot(aes(rel_year, rel_richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Delta[richness])) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  ggtitle(\"Relative to predisturbance\")\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  ggplot(aes(rel_year, rel_richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Delta[richness])) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  ggtitle(\"Relative to predisturbance\") +\n  facet_wrap(~ site)\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  filter(site == \"Paracou\") %&gt;% \n  ggplot(aes(rel_year, rel_richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Delta[richness])) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  geom_vline(xintercept = 20, linetype = \"dashed\", col = \"red\") +\n  ggtitle(\"Relative to predisturbance\") +\n  facet_wrap(~ site) +\n  geom_smooth(method = \"lm\", formula = y ~ poly(x, 4), se = FALSE, aes(group = paste(site, plot)))\n\n\n\n\n\nCaption.\n\n\n\n\nInterestingly looking at a specific year, e.g. 20 years after logging, the relative richness also shows an hump-shaped response to disturbance intensity in Missiones but not Paracou.\n\nShould Paracou disturbance intensity be reviewed?\n\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba, delta_ba_pct) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba, delta_ba_pct) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  filter(rel_year %in% 20:21) %&gt;% \n  ggplot(aes(delta_ba, rel_richness, col = site)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", formula = y ~poly(x, 2), se = FALSE) +\n  ggtitle(\"20 years after logging\") +\n  xlab(expression(Delta[BA])) +\n  ylab(expression(Delta[richness])) +\n  theme_bw()\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "21_species.html#shannon",
    "href": "21_species.html#shannon",
    "title": "Species",
    "section": "Shannon",
    "text": "Shannon\nSimilarly, absolute Shannon can’t be compared among sites as the plot area differs (besides closer).\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"shannon\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  mutate(site = recode(site,\n                       \"Misiones\" = \"Missiones (1-ha)\",\n                       \"Paracou\" = \"Paracou (6.25-ha)\")) %&gt;% \n  ggplot(aes(rel_year, richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Shannon)) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  ggtitle(\"Absolute\") +\n  facet_wrap(~ site, scales = \"free\")\n\n\n\n\n\nCaption.\n\n\n\n\nShannon relative to the predisturbance Shannon results in good trajectories among and within plots. Both sites seems to show negative hump-shaped trajectories with a decrease in richness in the years following the logging, followed by an increase toward the predisturbance level. The more intense the damages the higher the hump.\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"shannon\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  ggplot(aes(rel_year, rel_richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Delta[Shannon])) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  geom_vline(xintercept = 20, linetype = \"dashed\", col = \"red\") +\n  ggtitle(\"Relative to predisturbance\")\n\n\n\n\n\nCaption.\n\n\n\n\nInterestingly looking at a specific year, e.g. 20 years after logging, the relative Shannon shows a negative relaion to disturbance intensity, slightly in-curved suggesting either a plateau toward a minimu of 10% or a negative hump-shaped response.\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"shannon\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba, delta_ba_pct) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba, delta_ba_pct) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  filter(rel_year %in% 20:21) %&gt;% \n  ggplot(aes(delta_ba, rel_richness, col = site)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", formula = y ~poly(x, 2),\n              se = FALSE, aes(group = NA)) +\n  ggtitle(\"20 years after logging\") +\n  xlab(expression(Delta[BA])) +\n  ylab(expression(Delta[Shannon])) +\n  theme_bw()\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "21_species.html#simpson",
    "href": "21_species.html#simpson",
    "title": "Species",
    "section": "Simpson",
    "text": "Simpson\nSimpson results looks like Shannon results but with stronger patterns, as logically more influenced by evenness. Note that absolute Simpson among sites is almost directly comparable for once.\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"simpson\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  mutate(site = recode(site,\n                       \"Misiones\" = \"Missiones (1-ha)\",\n                       \"Paracou\" = \"Paracou (6.25-ha)\")) %&gt;% \n  ggplot(aes(rel_year, richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Simpson)) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  ggtitle(\"Absolute\") +\n  facet_wrap(~ site, scales = \"free\")\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"simpson\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  ggplot(aes(rel_year, rel_richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Delta[Simpson])) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  geom_vline(xintercept = 20, linetype = \"dashed\", col = \"red\") +\n  ggtitle(\"Relative to predisturbance\")\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"simpson\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba, delta_ba_pct) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba, delta_ba_pct) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  filter(rel_year %in% 20:21) %&gt;% \n  ggplot(aes(delta_ba, rel_richness, col = site)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", formula = y ~poly(x, 2),\n              se = FALSE, aes(group = NA)) +\n  ggtitle(\"20 years after logging\") +\n  xlab(expression(Delta[BA])) +\n  ylab(expression(Delta[Simpson])) +\n  theme_bw()\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "22_genus.html#richness",
    "href": "22_genus.html#richness",
    "title": "Genus",
    "section": "Richness",
    "text": "Richness\nGenus richness is about half species richness in Paracou but much closer to species richness in Missiones questioning the taxonomic resolution of the gathered data. Thus relative genus richness results in the same hump-shaped trajectories that relative species richness, but with less resolution in Paracou, both in time or with disturbance intensity.\n\nThese results advocate the analyses at the genus level if lacking taxonomic resolution in some sites.\n\n\n\nCode\nread_tsv(\"outputs/genus.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  mutate(site = recode(site,\n                       \"Misiones\" = \"Missiones (1-ha)\",\n                       \"Paracou\" = \"Paracou (6.25-ha)\")) %&gt;% \n  ggplot(aes(rel_year, richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Rrichness)) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  ggtitle(\"Absolute\") +\n  facet_wrap(~ site, scales = \"free\")\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/genus.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  ggplot(aes(rel_year, rel_richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Delta[richness])) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  ggtitle(\"Relative to predisturbance\") +\n  facet_wrap(~ site)\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/genus.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba, delta_ba_pct) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba, delta_ba_pct) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  filter(rel_year %in% 20:21) %&gt;% \n  ggplot(aes(delta_ba, rel_richness, col = site)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", formula = y ~poly(x, 2), se = FALSE) +\n  ggtitle(\"20 years after logging\") +\n  xlab(expression(Delta[BA])) +\n  ylab(expression(Delta[richness])) +\n  theme_bw()\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "22_genus.html#shannon",
    "href": "22_genus.html#shannon",
    "title": "Genus",
    "section": "Shannon",
    "text": "Shannon\nSimilarly, genus Shannon results are very similar and may justify the analyses at the genus level if needed or as a complementary.\n\n\nCode\nread_tsv(\"outputs/genus.tsv\") %&gt;% \n  filter(metric == \"shannon\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  ggplot(aes(rel_year, rel_richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Delta[Shannon])) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  geom_vline(xintercept = 20, linetype = \"dashed\", col = \"red\") +\n  ggtitle(\"Relative to predisturbance\")\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/genus.tsv\") %&gt;% \n  filter(metric == \"shannon\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba, delta_ba_pct) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba, delta_ba_pct) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  filter(rel_year %in% 20:21) %&gt;% \n  ggplot(aes(delta_ba, rel_richness, col = site)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", formula = y ~poly(x, 2),\n              se = FALSE, aes(group = NA)) +\n  ggtitle(\"20 years after logging\") +\n  xlab(expression(Delta[BA])) +\n  ylab(expression(Delta[Shannon])) +\n  theme_bw()\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "23_family.html#richness",
    "href": "23_family.html#richness",
    "title": "Family",
    "section": "Richness",
    "text": "Richness\n\n\nCode\nread_tsv(\"outputs/family.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  mutate(site = recode(site,\n                       \"Misiones\" = \"Missiones (1-ha)\",\n                       \"Paracou\" = \"Paracou (6.25-ha)\")) %&gt;% \n  ggplot(aes(rel_year, richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Rrichness)) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  ggtitle(\"Absolute\") +\n  facet_wrap(~ site, scales = \"free\")\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/family.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  ggplot(aes(rel_year, rel_richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Delta[richness])) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  ggtitle(\"Relative to predisturbance\") +\n  facet_wrap(~ site)\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/family.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba, delta_ba_pct) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba, delta_ba_pct) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  filter(rel_year %in% 20:21) %&gt;% \n  ggplot(aes(delta_ba, rel_richness, col = site)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", formula = y ~poly(x, 2), se = FALSE) +\n  ggtitle(\"20 years after logging\") +\n  xlab(expression(Delta[BA])) +\n  ylab(expression(Delta[richness])) +\n  theme_bw()\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "23_family.html#shannon",
    "href": "23_family.html#shannon",
    "title": "Family",
    "section": "Shannon",
    "text": "Shannon\n\n\nCode\nread_tsv(\"outputs/family.tsv\") %&gt;% \n  filter(metric == \"shannon\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  ggplot(aes(rel_year, rel_richness, col = delta_ba)) +\n  geom_line(aes(group = paste(site, plot))) +\n  geom_point() +\n  theme_bw() +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  xlab(\"\") + \n  ylab(expression(Delta[Shannon])) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  geom_vline(xintercept = 20, linetype = \"dashed\", col = \"red\") +\n  ggtitle(\"Relative to predisturbance\")\n\n\n\n\n\nCaption.\n\n\n\n\n\n\nCode\nread_tsv(\"outputs/family.tsv\") %&gt;% \n  filter(metric == \"shannon\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba, delta_ba_pct) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba, delta_ba_pct) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  filter(rel_year %in% 20:21) %&gt;% \n  ggplot(aes(delta_ba, rel_richness, col = site)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", formula = y ~poly(x, 2),\n              se = FALSE, aes(group = NA)) +\n  ggtitle(\"20 years after logging\") +\n  xlab(expression(Delta[BA])) +\n  ylab(expression(Delta[Shannon])) +\n  theme_bw()\n\n\n\n\n\nCaption."
  },
  {
    "objectID": "30_modelling.html",
    "href": "30_modelling.html",
    "title": "Modelling",
    "section": "",
    "text": "Data and modelling explorations.\n\nTo further describe."
  },
  {
    "objectID": "31_short.html#disturbance-test",
    "href": "31_short.html#disturbance-test",
    "title": "Short term",
    "section": "Disturbance test",
    "text": "Disturbance test\nWe first investigated prelogging basal area.\n\n\nCode\ndata &lt;- read_tsv(\"outputs/gathered.tsv\") %&gt;% \n  group_by(site, year, rel_year, delta_ba, plot) %&gt;% \n  summarise(ba = sum(ba)) %&gt;% \n  filter(rel_year &lt;= 5) %&gt;% \n  filter(!(paste(site, plot) %in% paste(\"Paracou\", 13:15))) %&gt;% \n  select(-year, -delta_ba)\ndata %&gt;% \n    group_by(site, plot) %&gt;% \n    filter(rel_year &lt;= 0) %&gt;% \n  ggplot(aes(paste(site, plot), ba)) +\n  geom_boxplot() +\n  coord_flip() +\n  theme_bw() +\n  ylab(\"prelogging BA\") + xlab(\"\")\n\n\n\n\n\nAs Paracou is among few sites with multiple prelogging inventories and showing a small variation, we summarised a single value of prelogging basal area that we set as the year 0 basal area value.\n\n\nCode\ndata2 &lt;- bind_rows(\n  data %&gt;% \n    group_by(site, plot) %&gt;% \n    filter(rel_year &lt;= 0) %&gt;% \n    summarise(ba = mean(ba, na.rm = T)) %&gt;% \n    mutate(rel_year = 0),\n  data %&gt;% \n    filter(rel_year &gt; 0)\n)\ndata2 %&gt;% \n  ggplot(aes(rel_year, ba)) +\n  geom_point() +\n  theme_bw() +\n  facet_wrap(~ paste(site, plot)) +\n  xlab(\"\") + \n   ylab(expression(\"Basal area of tree \" &gt;=10 ~\"cm dbh [\"~m^{2}~ha^{-~1}~\"]\")) +\n  geom_vline(xintercept = 0, linetype = \"dashed\")\n\n\n\n\n\nWe next used an exponential decay function to model the basal area loss after logging:\n\\[\nBA \\sim \\mathcal N ( BA_{post} + (BA_{pre} - BA_{post}) \\times e^{-\\alpha \\times time} \\sigma^2)\n\\]\nwith \\(BA_{pre}\\) the prelogging basal area, \\(BA_{post}\\) the minimal basal area post logging, and \\(\\alpha\\) the time decay.\n\n\nCode\nmodel %&gt;% \n  mutate(value = paste0(round(estimate, 3), \" (\", round(p.value, 3), \")\")) %&gt;% \n  arrange(term) %&gt;% \n  select(site, plot, term, value) %&gt;% \n  pivot_wider(names_from = term, values_from = value) %&gt;% \n  knitr::kable()\n\n\n\n\n\nsite\nplot\nalpha\nba_post\nba_pre\n\n\n\n\nMisiones\n5\n4.319 (0.694)\n16.076 (0)\n20.581 (0)\n\n\nMisiones\n7\n0.203 (0.66)\n31.612 (0.002)\n29.239 (0)\n\n\nMisiones\n11\n0.038 (0.963)\n33.252 (0.76)\n27.811 (0)\n\n\nMisiones\n19\n0.965 (0.647)\n19.87 (0.053)\n22.962 (0.029)\n\n\nParacou\n3\n0.98 (0.013)\n17.495 (0)\n32.831 (0)\n\n\nParacou\n4\n1.324 (0.002)\n17.227 (0)\n31.738 (0)\n\n\nParacou\n5\n0.653 (0.028)\n19.148 (0)\n30.79 (0)\n\n\nParacou\n7\n4.013 (0.035)\n26.057 (0)\n31.331 (0)\n\n\nParacou\n8\n1.478 (0.001)\n14.785 (0)\n31.602 (0)\n\n\nParacou\n10\n0.809 (0.017)\n18.709 (0)\n32.682 (0)\n\n\nParacou\n12\n1.191 (0.002)\n18.901 (0)\n32.805 (0)\n\n\n\n\n\n\nMost nls fits fails and we should further fit a single model with stan.\n\nInterestingly from the parameters we can derive the following indices:\n\n\\(\\Delta_{BA} = BA_{pre} - BA_{post}\\) the lost basal area corresponding to the disturbance intensity\n\\(t_{95}=\\frac3\\alpha\\)\n\nThis indices are exemplified on the figure below:\n\n\nCode\nalpha &lt;- 1\nba_pre &lt;- 30\nba_post &lt;- 20\nt_95 &lt;- 3/alpha\nggplot(data.frame(x = rnorm(1), y = rnorm(1)), aes(x, y)) +\n  xlim(0, 5) +\n  geom_function(fun = function(x) ba_post + (ba_pre - ba_post) * exp(-alpha * x), col = \"grey\") +\n  theme_bw() +\n  ylab(\"Basal Area BA\") +\n  xlab(\"Time T\") +\n  geom_point(x = 0, y = ba_pre, size = 2) +\n  ggrepel::geom_text_repel(label = expression(BA[pre]), x = 0, y = ba_pre) +\n  geom_point(x = 5, y = ba_post, size = 2) +\n  ggrepel::geom_text_repel(label = expression(BA[post]), x = 5, y = ba_post) +\n  geom_point(x = t_95, y = ba_pre-0.95*(ba_pre-ba_post), size = 2) +\n  ggrepel::geom_text_repel(label = expression(t[95]), x = t_95, y = ba_pre-0.95*(ba_pre-ba_post))\n\n\n\n\n\nWe thus obtained the following parameters and corresponding trajectories:\n\n\nCode\ninds &lt;- model %&gt;% \n  select(site, plot, term, estimate) %&gt;% \n  pivot_wider(names_from = term, values_from = estimate) %&gt;% \n  mutate(delta_ba = ba_pre - ba_post, t_95 = 3/alpha)\nknitr::kable(inds, digits = 3)\n\n\n\n\n\nsite\nplot\nba_pre\nba_post\nalpha\ndelta_ba\nt_95\n\n\n\n\nMisiones\n5\n20.581\n16.076\n4.319\n4.505\n0.695\n\n\nMisiones\n7\n29.239\n31.612\n0.203\n-2.373\n14.785\n\n\nMisiones\n11\n27.811\n33.252\n0.038\n-5.440\n79.939\n\n\nMisiones\n19\n22.962\n19.870\n0.965\n3.092\n3.108\n\n\nParacou\n3\n32.831\n17.495\n0.980\n15.335\n3.060\n\n\nParacou\n4\n31.738\n17.227\n1.324\n14.511\n2.265\n\n\nParacou\n5\n30.790\n19.148\n0.653\n11.642\n4.596\n\n\nParacou\n7\n31.331\n26.057\n4.013\n5.273\n0.748\n\n\nParacou\n8\n31.602\n14.785\n1.478\n16.817\n2.030\n\n\nParacou\n10\n32.682\n18.709\n0.809\n13.973\n3.706\n\n\nParacou\n12\n32.805\n18.901\n1.191\n13.905\n2.518\n\n\n\n\n\n\n\nCode\npreds &lt;- inds %&gt;% \n  mutate(rel_year = list(0:5)) %&gt;% \n  unnest(rel_year) %&gt;% \n  mutate(ba = ba_post + (ba_pre - ba_post) * exp(-alpha * rel_year))\ndata2 %&gt;% \n  ggplot(aes(rel_year, ba)) +\n  geom_point() +\n  geom_line(data = preds) +\n  theme_bw() +\n  facet_wrap(~ paste(site, plot)) +\n  xlab(\"\") + \n   ylab(expression(\"Basal area of tree \" &gt;=10 ~\"cm dbh [\"~m^{2}~ha^{-~1}~\"]\")) +\n  geom_vline(xintercept = 0, linetype = \"dashed\")\n\n\n\n\n\nThis is interesting results but will be further explored with a full Bayesian model in the next part."
  },
  {
    "objectID": "31_short.html#disturbance-full",
    "href": "31_short.html#disturbance-full",
    "title": "Short term",
    "section": "Disturbance full",
    "text": "Disturbance full\nWe used a single model defined as:\n\\[\nBA_{plot} \\sim \\mathcal N ( BA_{post,plot} + \\Delta BA_{plot} \\times e^{-\\alpha_{plot} \\times time}, \\sigma^2)\n\\]\nWe ensured positive \\(BA_{post,plot}\\) , \\(\\Delta BA_{plot}\\), \\(\\alpha_{plot}\\), and \\(\\sigma\\). And we computed back \\(t_{95,plot} = \\frac3\\alpha_{plot}\\) and \\(BA_{pre,plot}=BA_{post,plot}+\\Delta BA_{plot}\\).\nThe model converged quickly.\nLooking at \\(\\Delta_{BA}\\) we can quickly identify control plots with non-significant disturbance values and obtain a relatively precise value of disturbance intensity for the other plots.\n\n\nCode\nf_fixed$draws(variables = \"delta_ba\", format = \"df\") %&gt;% \n  select(-.chain, -.draw, -.iteration) %&gt;% \n  gather(\"term\", \"estimate\") %&gt;% \n  group_by(term) %&gt;% \n  separate(term, c(\"term\", \"site_plot_num\"), \"\\\\[\") %&gt;% \n  mutate(site_plot_num = as.numeric(gsub(\"]\", \"\", site_plot_num))) %&gt;% \n  left_join(data2 %&gt;% select(site, plot, site_plot_num) %&gt;% unique()) %&gt;% \n  ggplot(aes(x = estimate, y = as.character(plot), fill = site)) +\n  ggridges::geom_density_ridges2() +\n  theme_bw() +\n  ylab(\"\") + xlab(expression(Delta[BA]))\n\n\n\n\n\nSimilarly, we can have a quick estimate of predisturbance basal area with narrow intervals.\n\n\nCode\nf_fixed$draws(variables = \"ba_pre\", format = \"df\") %&gt;% \n  select(-.chain, -.draw, -.iteration) %&gt;% \n  gather(\"term\", \"estimate\") %&gt;% \n  group_by(term) %&gt;% \n  separate(term, c(\"term\", \"site_plot_num\"), \"\\\\[\") %&gt;% \n  mutate(site_plot_num = as.numeric(gsub(\"]\", \"\", site_plot_num))) %&gt;% \n  left_join(data2 %&gt;% select(site, plot, site_plot_num) %&gt;% unique()) %&gt;% \n  ggplot(aes(x = estimate, y = as.character(plot), fill = site)) +\n  ggridges::geom_density_ridges2() +\n  theme_bw() +\n  ylab(\"\") + xlab(expression(BA[pre]))\n\n\n\n\n\nBut without surprise the \\(\\alpha\\) values is much more uncertain, leading thus to an uncertain time of maximal disturbance \\(t_{95}\\).\n\n\nCode\nf_fixed$draws(variables = \"alpha\", format = \"df\") %&gt;% \n  select(-.chain, -.draw, -.iteration) %&gt;% \n  gather(\"term\", \"estimate\") %&gt;% \n  group_by(term) %&gt;% \n  separate(term, c(\"term\", \"site_plot_num\"), \"\\\\[\") %&gt;% \n  mutate(site_plot_num = as.numeric(gsub(\"]\", \"\", site_plot_num))) %&gt;% \n  left_join(data2 %&gt;% select(site, plot, site_plot_num) %&gt;% unique()) %&gt;% \n  ggplot(aes(x = estimate, y = as.character(plot), fill = site)) +\n  ggridges::geom_density_ridges2() +\n  theme_bw() +\n  ylab(\"\") + xlab(expression(alpha))\n\n\n\n\n\nWe obtained the following trajectories with in grey the narrow 95% confidence interval around the mean.\n\n\nCode\ninds &lt;- f_fixed$draws(variables = c(\"ba_post\", \"ba_pre\", \"delta_ba\", \"alpha\", \"t_95\"), \n                      format = \"df\") %&gt;% \n  select(-.chain, -.draw, -.iteration) %&gt;% \n  gather(\"term\", \"estimate\") %&gt;% \n  group_by(term) %&gt;% \n  summarise(l = quantile(estimate, 0.025), m = median(estimate), h = quantile(estimate, 0.975)) %&gt;% \n  separate(term, c(\"term\", \"site_plot_num\"), \"\\\\[\") %&gt;% \n  mutate(site_plot_num = as.numeric(gsub(\"]\", \"\", site_plot_num))) %&gt;% \n  gather(metric, value, -term, -site_plot_num) %&gt;% \n  mutate(term = paste0(term, \"_\", metric)) %&gt;% \n  select(-metric) %&gt;% \n  pivot_wider(names_from = term, values_from = value)\npreds &lt;- inds %&gt;% \n  mutate(rel_year = list(0:5)) %&gt;% \n  unnest(rel_year) %&gt;% \n  mutate(ba_l = ba_post_l + (ba_pre_l - ba_post_l) * exp(-alpha_l * rel_year),\n         ba_m = ba_post_m + (ba_pre_m - ba_post_m) * exp(-alpha_m * rel_year),\n         ba_h = ba_post_h + (ba_pre_h - ba_post_h) * exp(-alpha_h * rel_year))  %&gt;% \n  left_join(data2 %&gt;% select(site, plot, site_plot_num) %&gt;% unique())\ndata2 %&gt;% \n  ggplot(aes(x = rel_year)) +\n  geom_point(aes(y = ba)) +\n  geom_ribbon(aes(ymin = ba_l, ymax = ba_h), data = preds, fill = \"grey70\") +\n  geom_line(aes(y = ba_m), data = preds) +\n  theme_bw() +\n  facet_wrap(~ paste(site, plot)) +\n  xlab(\"\") + \n  ylab(expression(\"Basal area of tree \" &gt;=10 ~\"cm dbh [\"~m^{2}~ha^{-~1}~\"]\")) +\n  geom_vline(xintercept = 0, linetype = \"dashed\")\n\n\n\n\n\n\nLink disturbance intensity and time to reach the minimum?\n\n\n\nCode\ninds %&gt;% \n  left_join(data2 %&gt;% select(site, plot, site_plot_num) %&gt;% unique()) %&gt;% \n  filter(delta_ba_m &gt; 2) %&gt;% \n  ggplot(aes(delta_ba_m, t_95_m)) +\n  geom_point(aes(col = site)) +\n  ggrepel::geom_text_repel(aes(label = plot)) +\n  theme_bw() +\n  xlab(expression(Delta[BA])) +\n  ylab(expression(t[95])) +\n  ggpubr::stat_cor()\n\n\n\n\n\n\nLink predisturbance basal area and disturbance intensity?\n\n\n\nCode\ninds %&gt;% \n  left_join(data2 %&gt;% select(site, plot, site_plot_num) %&gt;% unique()) %&gt;% \n  filter(delta_ba_m &gt; 2) %&gt;% \n  ggplot(aes(ba_pre_m, delta_ba_m)) +\n  geom_point(aes(col = site)) +\n  ggrepel::geom_text_repel(aes(label = plot)) +\n  theme_bw() +\n  ylab(expression(Delta[BA])) +\n  xlab(expression(BA[pre])) +\n  ggpubr::stat_cor()"
  },
  {
    "objectID": "31_short.html#diversity",
    "href": "31_short.html#diversity",
    "title": "Short term",
    "section": "Diversity",
    "text": "Diversity\n\nDiversity does not show a short term decrease, we could directly simulate the hump-shaped response?\n\n\n\nCode\ndata &lt;- read_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  filter(rel_year &lt;= 5) %&gt;% \n  filter(!(paste(site, plot) %in% paste(\"Paracou\", 13:15)))\ndata %&gt;% \n  ggplot(aes(rel_year, richness)) +\n  geom_line() +\n  geom_point() +\n  theme_bw() +\n  xlab(\"\") + \n  geom_vline(xintercept = 0, linetype = \"dashed\")"
  },
  {
    "objectID": "32_long.html",
    "href": "32_long.html",
    "title": "Long term",
    "section": "",
    "text": "Test on long term response modelling.\nWe started from two hypotheses:\n\nH1: tree diversity long-term response increases through time to a maximum value, after which it then declines in late succession\nH2: tree diversity also shows a non-linear response to increased intensity of logging: lightly logged forests show a transient increase in tree diversity, but more intensively logged forests show a strong negative effect on diversity\n\nFor preliminary analyses we focused on Paracou, the most data riched dataset, to better explore the model shape. We focused on data two years after logging to remove the short term response (to be better explored in the previous chapter). We first worked with species richness (no evenness) and used relative richness normalised by pre-logging richness. Further exploration should extend the modelling framework to other diversity metrics, test at the genus level for datasets with less information, and try to use absolute richness and include normalisation within the modelling framework.\n\n\nCode\ndata &lt;- read_tsv(\"outputs/species.tsv\") %&gt;% \n  filter(metric == \"richness\") %&gt;% \n  group_by(site, rel_year, plot, delta_ba) %&gt;% \n  summarise(richness = sum(value)) %&gt;% \n  group_by(site, plot, delta_ba) %&gt;% \n  mutate(richness_pre = mean(ifelse(rel_year &lt; 1, richness, NA), na.rm = T)) %&gt;% \n  mutate(rel_richness = (richness-richness_pre)/richness_pre*100) %&gt;% \n  filter(site == \"Paracou\") %&gt;% \n  na.omit()\n\n\nFollowing the first hypothesis H1, we used a simple quadratic regression of relative richness with relative time to logging to correctly represent the hump-shaped expectation:\n\\[\nRichness \\sim \\mathcal N(a \\times time^2 + b \\times time + c, \\sigma^2)\n\\]\nThe main conceptual issues is with control plots for which we expect more a linear relationship with time with either a stable richness (\\(Richness \\sim \\mathcal N(c,\\sigma^2)\\)) or an ecological drift toward higher or lower values (\\(Richness \\sim \\mathcal N(b \\times time + c,\\sigma^2)\\)). Maybe a model variable selection using instead an horseshoe prior on \\(a\\) could help distinguish hump-shaped from linear responses.\nWe first explored the question of model shape comparing models evaluations, other shapes should be further included.\n\n\nCode\nbind_rows(\n  data %&gt;% \n  filter(rel_year &gt;= 3) %&gt;% \n  ungroup() %&gt;% \n  mutate(model = \"quadratic\") %&gt;% \n  nest_by(site, plot, delta_ba, model) %&gt;% \n  mutate(m = list(lm(rel_richness ~ poly(rel_year, 2, raw = TRUE),\n                     data = data) %&gt;% broom::glance())) %&gt;% \n  unnest(m) %&gt;% \n  select(-data),\n  data %&gt;% \n  filter(rel_year &gt;= 3) %&gt;% \n  ungroup() %&gt;% \n  mutate(model = \"linear\") %&gt;% \n  nest_by(site, plot, delta_ba, model) %&gt;% \n  mutate(m = list(lm(rel_richness ~ poly(rel_year, 1, raw = TRUE),\n                     data = data) %&gt;% broom::glance())) %&gt;% \n  unnest(m) %&gt;% \n  select(-data)\n) %&gt;% \n  arrange(site, plot, model) %&gt;% \n  knitr::kable(digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsite\nplot\ndelta_ba\nmodel\nr.squared\nadj.r.squared\nsigma\nstatistic\np.value\ndf\nlogLik\nAIC\nBIC\ndeviance\ndf.residual\nnobs\n\n\n\n\nParacou\n1\n0.000\nlinear\n0.756\n0.747\n1.206\n80.529\n0.000\n1\n-43.931\n93.861\n97.858\n37.797\n26\n28\n\n\nParacou\n1\n0.000\nquadratic\n0.847\n0.835\n0.972\n69.395\n0.000\n2\n-37.359\n82.718\n88.047\n23.638\n25\n28\n\n\nParacou\n2\n6.249\nlinear\n0.257\n0.216\n3.593\n6.242\n0.022\n1\n-52.905\n111.810\n114.797\n232.374\n18\n20\n\n\nParacou\n2\n6.249\nquadratic\n0.580\n0.531\n2.781\n11.739\n0.001\n2\n-47.207\n102.414\n106.397\n131.439\n17\n20\n\n\nParacou\n3\n14.713\nlinear\n0.606\n0.584\n4.591\n27.630\n0.000\n1\n-57.805\n121.610\n124.597\n379.310\n18\n20\n\n\nParacou\n3\n14.713\nquadratic\n0.981\n0.978\n1.047\n429.990\n0.000\n2\n-27.674\n63.348\n67.331\n18.639\n17\n20\n\n\nParacou\n4\n14.330\nlinear\n0.603\n0.581\n4.780\n27.329\n0.000\n1\n-58.612\n123.224\n126.211\n411.195\n18\n20\n\n\nParacou\n4\n14.330\nquadratic\n0.953\n0.948\n1.690\n172.838\n0.000\n2\n-37.245\n82.490\n86.473\n48.538\n17\n20\n\n\nParacou\n5\n10.585\nlinear\n0.971\n0.969\n1.628\n593.892\n0.000\n1\n-37.070\n80.140\n83.127\n47.695\n18\n20\n\n\nParacou\n5\n10.585\nquadratic\n0.987\n0.986\n1.107\n653.484\n0.000\n2\n-28.780\n65.560\n69.543\n20.819\n17\n20\n\n\nParacou\n6\n0.000\nlinear\n0.835\n0.829\n1.392\n131.727\n0.000\n1\n-47.947\n101.893\n105.890\n50.355\n26\n28\n\n\nParacou\n6\n0.000\nquadratic\n0.914\n0.907\n1.026\n132.600\n0.000\n2\n-38.862\n85.723\n91.052\n26.316\n25\n28\n\n\nParacou\n7\n5.377\nlinear\n0.813\n0.803\n1.838\n78.206\n0.000\n1\n-39.500\n85.001\n87.988\n60.819\n18\n20\n\n\nParacou\n7\n5.377\nquadratic\n0.813\n0.791\n1.891\n36.932\n0.000\n2\n-39.500\n87.001\n90.983\n60.818\n17\n20\n\n\nParacou\n8\n16.976\nlinear\n0.711\n0.695\n5.672\n44.345\n0.000\n1\n-62.036\n130.072\n133.059\n579.086\n18\n20\n\n\nParacou\n8\n16.976\nquadratic\n0.951\n0.945\n2.399\n165.727\n0.000\n2\n-44.256\n96.512\n100.495\n97.853\n17\n20\n\n\nParacou\n9\n5.839\nlinear\n0.653\n0.634\n3.236\n33.886\n0.000\n1\n-50.809\n107.619\n110.606\n188.441\n18\n20\n\n\nParacou\n9\n5.839\nquadratic\n0.932\n0.924\n1.470\n117.143\n0.000\n2\n-34.462\n76.924\n80.907\n36.748\n17\n20\n\n\nParacou\n10\n13.162\nlinear\n0.078\n0.027\n4.725\n1.531\n0.232\n1\n-58.381\n122.762\n125.749\n401.795\n18\n20\n\n\nParacou\n10\n13.162\nquadratic\n0.430\n0.362\n3.825\n6.401\n0.008\n2\n-53.583\n115.167\n119.150\n248.687\n17\n20\n\n\nParacou\n11\n0.000\nlinear\n0.932\n0.930\n0.965\n357.236\n0.000\n1\n-37.694\n81.387\n85.384\n24.209\n26\n28\n\n\nParacou\n11\n0.000\nquadratic\n0.932\n0.927\n0.984\n171.773\n0.000\n2\n-37.692\n83.384\n88.712\n24.206\n25\n28\n\n\nParacou\n12\n13.639\nlinear\n0.607\n0.585\n3.833\n27.755\n0.000\n1\n-54.200\n114.401\n117.388\n264.514\n18\n20\n\n\nParacou\n12\n13.639\nquadratic\n0.974\n0.971\n1.013\n318.943\n0.000\n2\n-27.017\n62.034\n66.017\n17.454\n17\n20\n\n\n\n\n\nIt appears that the quadratic shape is always better, which is expected as more flexible, but with interestingly net improvement in model fitting for logged plots but not undisturbed plots. We thus applied the quadratic model on each plot independently, but should later use a single common model with site and plots effects, either fixed random or hierarchical.\n\n\nCode\nmodel &lt;- data %&gt;% \n  filter(rel_year &gt;= 3) %&gt;% \n  ungroup() %&gt;% \n  nest_by(site, plot, delta_ba) %&gt;% \n  mutate(m = list(lm(rel_richness ~ poly(rel_year, 2, raw = TRUE),\n                     data = data) %&gt;% broom::tidy())) %&gt;% \n  unnest(m) %&gt;% \n  mutate(term = recode(term,\n                       \"(Intercept)\" = \"c\",       \n                       \"poly(rel_year, 2, raw = TRUE)1\" = \"b\",\n                       \"poly(rel_year, 2, raw = TRUE)2\" = \"a\")) %&gt;% \n  select(-data)\nmodel %&gt;% \n  mutate(value = paste0(round(estimate, 3), \" (\", round(p.value, 3), \")\")) %&gt;% \n  arrange(term) %&gt;% \n  select(site, plot, delta_ba, term, value) %&gt;% \n  pivot_wider(names_from = term, values_from = value) %&gt;% \n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\nsite\nplot\ndelta_ba\na\nb\nc\n\n\n\n\nParacou\n1\n0.000000\n-0.008 (0.001)\n0.117 (0.169)\n0.157 (0.82)\n\n\nParacou\n2\n6.249328\n-0.027 (0.002)\n0.786 (0.012)\n-3.828 (0.086)\n\n\nParacou\n3\n14.713222\n-0.051 (0)\n2.389 (0)\n-7.86 (0)\n\n\nParacou\n4\n14.330176\n-0.051 (0)\n2.413 (0)\n-7.862 (0)\n\n\nParacou\n5\n10.584527\n-0.014 (0)\n1.379 (0)\n-6.185 (0)\n\n\nParacou\n6\n0.000000\n-0.011 (0)\n0.119 (0.185)\n2.154 (0.006)\n\n\nParacou\n7\n5.377220\n0 (0.984)\n-0.354 (0.08)\n1.253 (0.393)\n\n\nParacou\n8\n16.975546\n-0.059 (0)\n2.977 (0)\n-6.417 (0.003)\n\n\nParacou\n9\n5.839494\n-0.033 (0)\n1.619 (0)\n-3.782 (0.003)\n\n\nParacou\n10\n13.162254\n-0.033 (0.005)\n1.083 (0.012)\n-10.941 (0.001)\n\n\nParacou\n11\n0.000000\n0 (0.954)\n-0.325 (0.001)\n1.727 (0.019)\n\n\nParacou\n12\n13.638615\n-0.042 (0)\n1.982 (0)\n-9.335 (0)\n\n\n\n\n\nThe quadratic coefficient \\(a\\) was always significant at the exception of control plot 11 where a linear relationship seems better. But note that for control plot 1 and 6 \\(b\\) and/or \\(c\\) were not significant either. Interestingly, we can derive indices from the three parameters \\(a\\), \\(b\\), and \\(c\\), such as:\n\n\\(T_{opt} = -\\frac{b}{2a}\\) the time to reach the maximum richness after disturbance\n\\(D_{max} = aT_{opt}^2 + bT_{opt}+c\\) the maximum richness after disturbance\n\\(T_{return} = \\frac{-b-\\sqrt{b^2-4ac}}{2a}\\) the time to reach back the equilibrium\n\nThis indices are exemplified on the figure below:\n\n\nCode\na &lt;- -1\nb &lt;- 5\nc &lt;- -1\nt_opt &lt;- -b/2*a\nd_max &lt;- a*t_opt^2 + b*t_opt + c\nt_return &lt;- (-b - sqrt(b^2-4*a*c))/(2*a)\nggplot(data.frame(x = rnorm(1), y = rnorm(1)), aes(x, y)) +\n  xlim(0-0.2, t_return+0.2) +\n  ylim(c-0.2, d_max+0.2) +\n  geom_function(fun = function(x) a*x^2+b*x+c, col = \"grey\") +\n  theme_bw() +\n  ylab(\"Diveristy D\") +\n  xlab(\"Time T\") +\n  geom_point(x = t_return, y = 0, col = \"red\", size = 2)  +\n  ggrepel::geom_text_repel(label = expression(T[return]), x = t_return, y = 0, col = \"red\") +\n  geom_point(x = t_opt, y = d_max, col = \"blue\", size = 2) +\n  ggrepel::geom_text_repel(label = expression((T[opt]~\",\"~D[max])), x = t_opt, y = d_max, col = \"blue\")\n\n\n\n\n\nWe thus obtained the following parameters and corresponding trajectories:\n\n\nCode\ninds &lt;- model %&gt;% \n  select(plot, delta_ba, term, estimate) %&gt;% \n  pivot_wider(names_from = term, values_from = estimate) %&gt;% \n  mutate(t_opt = -b/(2*a), \n         t_return = (-b + -sqrt(b^2-4*a*c))/(2*a)) %&gt;% \n  mutate(d_max = a*t_opt^2 + b*t_opt + c)\nknitr::kable(inds %&gt;% select(-a, -b, -c), digits = 3)\n\n\n\n\n\nsite\nplot\ndelta_ba\nt_opt\nt_return\nd_max\n\n\n\n\nParacou\n1\n0.000\n7.220\n15.670\n0.581\n\n\nParacou\n2\n6.249\n14.665\n23.164\n1.936\n\n\nParacou\n3\n14.713\n23.577\n43.595\n20.305\n\n\nParacou\n4\n14.330\n23.747\n43.976\n20.791\n\n\nParacou\n5\n10.585\n49.856\n95.004\n28.194\n\n\nParacou\n6\n0.000\n5.619\n20.945\n2.488\n\n\nParacou\n7\n5.377\n-1770.474\n3.541\n314.223\n\n\nParacou\n8\n16.976\n25.435\n48.614\n31.446\n\n\nParacou\n9\n5.839\n24.642\n46.826\n16.171\n\n\nParacou\n10\n13.162\n16.399\nNaN\n-2.063\n\n\nParacou\n11\n0.000\n-1322.898\n5.299\n216.855\n\n\nParacou\n12\n13.639\n23.635\n41.967\n14.092\n\n\n\n\n\n\n\nCode\npreds &lt;- inds %&gt;% \n  mutate(rel_year = list(1:50)) %&gt;% \n  unnest(rel_year) %&gt;% \n  mutate(rel_richness = a*rel_year^2 + b*rel_year + c)\ndata %&gt;% \n  ggplot(aes(rel_year, rel_richness, col = delta_ba)) +\n  geom_point() +\n  geom_line(data = preds) +\n  theme_bw() +\n  facet_wrap(~ plot) +\n  xlab(\"\") + \n  ylab(expression(Delta[richness])) +\n  geom_vline(xintercept = 0, linetype = \"dashed\") +\n  scale_color_viridis_c(expression(Delta[BA])) +\n  geom_point(aes(x = t_opt, y = d_max), col = \"red\",\n             data = select(inds, site, plot, delta_ba, d_max, t_opt) %&gt;% filter(t_opt &gt;= 0)) +\n  geom_point(aes(x = t_return, y = 0), col = \"red\",\n             data = select(inds, site, plot, delta_ba, t_return) %&gt;% filter(t_return &gt;=0))\n\n\n\n\n\n\nNote that some trajectories such as plot 10 are not reaching back the pre-disturbance diversity and have thus no return time. However it seems on the opposite that the trajectory reached back diversity quickly but then ecological drift resulted in loss diversity in the following years similarly to control plots with lower values influencing the trajectory fitting. We have a similar pattern for plot 7.\n\nUsing the extracted indices we could further test the second hypothesis H2 with a regression of the indices against disturbance intensity represented here by lost basal area:\n\n\nCode\ninds %&gt;% \n  ungroup() %&gt;% \n  select(delta_ba, d_max, t_opt, plot) %&gt;% \n  gather(metric, value, -delta_ba, -plot) %&gt;% \n  mutate(metric = recode(metric, \"d_max\" = \"D[max]\", \"t_opt\" = \"T[opt]\")) %&gt;% \n  filter(value &gt;= 0, value &lt; 100) %&gt;% \n  ggplot(aes(delta_ba, value)) +\n  geom_smooth(method = \"lm\", formula = y ~ poly(x, 2), se = F) +\n  geom_point(col = \"grey\") +\n  facet_wrap(~ metric, scales = \"free\", labeller = label_parsed) +\n  theme_bw() +\n  xlab(expression(Delta[BA])) + ylab(\"\") +\n  ggrepel::geom_text_repel(aes(label = plot), col = \"grey\") +\n  ggpubr::stat_cor(label.y = -2) +\n  ggpubr::stat_regline_equation(formula = y ~ poly(x, 2)) +\n  ylim(-3, NA)\n\n\n\n\n\nWe seem to have more a linear increase of maximum diversity with disturbance intensity across Paracou plots but the time to reach the optimum, and similarly the time of return to the equilibrium (not shown but related), have apparently a quadratic shape with a hump-shaped response showing longer time to reach the optimum diversity for intermediately disturbed plots. This should be further explored but we would expect oppositely diversity and not time to be hump-shaped. The relation for \\(T_{opt}\\) is non-significant, and the linear relation with \\(D_{max}\\) could be related to a lack of strongly disturbed plots.\nWe further tested the modelling through a single hierarchical model as follow:\n\\[\n\\begin{gather}\ndiversity_{year, plot} \\sim \\mathcal N ( a_{plot} \\times time^2 + b_{plot} \\times time+ c_{plot}, \\sigma^2 ) \\\\\nT_{opt} = -\\frac {b_{plot}} {2 \\times a_{plot}} \\\\\nD_{max, plot} = a_{plot} \\times T_{opt}^2 + b_{plot} \\times T_{opt} + c_{plot} \\\\\nD_{max, plot} \\sim \\mathcal N( D_{max,0} + d \\times disturbance, \\sigma_d^2)\n\\end{gather}\n\\]\n\n\nCode\nlibrary(rstan)\noptions(mc.cores = 4)\nrstan_options(auto_write = TRUE)\ndata2 &lt;- filter(data, rel_year &gt;= 3) %&gt;% ungroup()\nmdata &lt;- list(\n  N = nrow(data2),\n  P = max(data2$plot),\n  diversity = data2$rel_richness,\n  time = data2$rel_year,\n  disturbance = (select(data2, plot, delta_ba) %&gt;% unique() %&gt;% arrange(plot))$delta_ba,\n  plot = data2$plot\n)\nm_dist &lt;- stan_model(\"models/ltr_dist.stan\")\nf_dist &lt;- sampling(m_dist, mdata, chains = 4, control = list(max_treedepth = 15))\nsave(m_dist, f_dist, file = \"outputs/ltr_dist.Rdata\")\n\n\n\n\nCode\nload(\"outputs/ltr_dist.Rdata\")\nf_dist\n\n\nInference for Stan model: anon_model.\n4 chains, each with iter=2000; warmup=1000; thin=1; \npost-warmup draws per chain=1000, total post-warmup draws=4000.\n\n             mean se_mean    sd    2.5%     25%     50%     75%   97.5% n_eff\na_p[1]      -0.01    0.00  0.00   -0.02   -0.01   -0.01   -0.01    0.00  3804\na_p[2]      -0.03    0.00  0.00   -0.04   -0.03   -0.03   -0.02   -0.02  4578\na_p[3]      -0.05    0.00  0.00   -0.06   -0.05   -0.05   -0.05   -0.04  4193\na_p[4]      -0.05    0.00  0.00   -0.06   -0.05   -0.05   -0.05   -0.04  4836\na_p[5]      -0.02    0.00  0.00   -0.02   -0.02   -0.02   -0.01   -0.01  5092\na_p[6]      -0.01    0.00  0.00   -0.02   -0.01   -0.01   -0.01    0.00  4369\na_p[7]       0.00    0.00  0.00   -0.01   -0.01    0.00    0.00    0.00  2827\na_p[8]      -0.06    0.00  0.00   -0.07   -0.06   -0.06   -0.06   -0.05  4357\na_p[9]      -0.03    0.00  0.00   -0.04   -0.04   -0.03   -0.03   -0.02  5038\na_p[10]     -0.03    0.00  0.00   -0.04   -0.04   -0.03   -0.03   -0.02  5081\na_p[11]      0.00    0.00  0.00   -0.01   -0.01    0.00    0.00    0.00  3572\na_p[12]     -0.04    0.00  0.00   -0.05   -0.05   -0.04   -0.04   -0.03  4575\nb_p[1]       0.13    0.00  0.14   -0.13    0.02    0.12    0.23    0.42  3771\nb_p[2]       0.79    0.00  0.19    0.44    0.66    0.79    0.91    1.16  4734\nb_p[3]       2.39    0.00  0.18    2.04    2.27    2.39    2.51    2.75  4235\nb_p[4]       2.41    0.00  0.18    2.05    2.29    2.41    2.53    2.76  4800\nb_p[5]       1.47    0.00  0.16    1.18    1.35    1.46    1.58    1.80  4963\nb_p[6]       0.13    0.00  0.14   -0.15    0.03    0.12    0.22    0.41  4463\nb_p[7]      -0.19    0.00  0.10   -0.34   -0.27   -0.22   -0.14    0.05  2733\nb_p[8]       2.97    0.00  0.19    2.60    2.85    2.97    3.09    3.36  4441\nb_p[9]       1.61    0.00  0.18    1.26    1.49    1.62    1.73    1.97  5048\nb_p[10]      1.10    0.00  0.18    0.75    0.97    1.10    1.23    1.46  4929\nb_p[11]     -0.17    0.00  0.09   -0.30   -0.23   -0.18   -0.11    0.05  3608\nb_p[12]      1.99    0.00  0.18    1.63    1.87    1.99    2.11    2.35  4510\nc_p[1]       0.08    0.02  1.22   -2.39   -0.73    0.12    0.94    2.37  3892\nc_p[2]      -3.84    0.02  1.42   -6.58   -4.78   -3.84   -2.90   -1.09  4650\nc_p[3]      -7.87    0.02  1.36  -10.56   -8.78   -7.88   -6.95   -5.19  4262\nc_p[4]      -7.85    0.02  1.37  -10.51   -8.78   -7.85   -6.96   -5.13  4983\nc_p[5]      -6.69    0.02  1.28   -9.25   -7.55   -6.67   -5.81   -4.23  5006\nc_p[6]       2.10    0.02  1.20   -0.28    1.32    2.12    2.91    4.40  4654\nc_p[7]       0.24    0.02  0.97   -1.84   -0.37    0.30    0.88    2.00  3694\nc_p[8]      -6.39    0.02  1.39   -9.20   -7.29   -6.38   -5.45   -3.70  4544\nc_p[9]      -3.75    0.02  1.36   -6.39   -4.65   -3.75   -2.84   -1.10  5115\nc_p[10]    -11.02    0.02  1.38  -13.75  -11.97  -10.99  -10.07   -8.39  4722\nc_p[11]      0.63    0.01  0.92   -1.34    0.05    0.67    1.25    2.30  4301\nc_p[12]     -9.36    0.02  1.40  -12.11  -10.31   -9.36   -8.43   -6.60  4407\nd            1.18    0.01  0.53    0.13    0.85    1.18    1.50    2.27  4203\nd_max0       2.13    0.09  5.50   -8.74   -1.41    2.11    5.66   13.18  3909\nsigma        1.83    0.00  0.09    1.67    1.77    1.83    1.89    2.02  4671\nsigma_d     10.42    0.06  2.93    6.48    8.42    9.88   11.82   17.64  2792\nt_opt[1]     3.35    0.29 15.06  -34.08    2.13    7.51   10.45   13.76  2610\nt_opt[2]    14.55    0.02  1.12   11.99   13.95   14.68   15.31   16.35  3921\nt_opt[3]    23.62    0.01  0.66   22.49   23.16   23.58   24.02   25.08  3834\nt_opt[4]    23.80    0.01  0.67   22.62   23.33   23.75   24.21   25.27  4775\nt_opt[5]    46.51    0.12  8.05   35.69   40.92   44.90   50.43   65.91  4604\nt_opt[6]     3.30    0.21 10.08  -20.83    1.64    5.76    8.40   11.78  2244\nt_opt[7]   -38.93    0.57 37.00 -133.70  -55.53  -28.65  -11.56    2.56  4181\nt_opt[8]    25.49    0.01  0.72   24.24   24.99   25.45   25.94   27.04  3846\nt_opt[9]    24.79    0.02  1.18   22.90   23.95   24.64   25.47   27.45  4573\nt_opt[10]   16.39    0.01  0.70   14.89   15.97   16.43   16.86   17.66  4528\nt_opt[11]  -33.08    0.49 32.30 -117.06  -45.70  -24.36  -10.20    2.68  4324\nt_opt[12]   23.70    0.01  0.82   22.29   23.13   23.62   24.19   25.54  4525\nd_max[1]     1.03    0.03  1.37   -0.33    0.38    0.77    1.26    4.55  2433\nd_max[2]     2.01    0.01  0.61    0.85    1.59    2.01    2.41    3.23  4309\nd_max[3]    20.34    0.01  0.62   19.15   19.92   20.34   20.75   21.58  4078\nd_max[4]    20.80    0.01  0.61   19.59   20.39   20.79   21.22   21.96  4064\nd_max[5]    26.90    0.05  3.25   22.63   24.66   26.25   28.38   34.95  4483\nd_max[6]     2.86    0.03  1.31    1.48    2.20    2.62    3.11    5.87  2159\nd_max[7]     5.40    0.10  6.37   -1.72    0.70    3.62    8.35   21.69  4319\nd_max[8]    31.47    0.01  0.61   30.30   31.05   31.47   31.88   32.65  3981\nd_max[9]    16.19    0.01  0.60   15.02   15.79   16.19   16.60   17.38  4337\nd_max[10]   -1.95    0.01  0.65   -3.24   -2.39   -1.94   -1.51   -0.69  4910\nd_max[11]    4.48    0.08  5.23   -1.17    0.84    3.02    6.58   17.99  4435\nd_max[12]   14.14    0.01  0.60   12.96   13.74   14.14   14.54   15.34  4551\nlp__      -368.44    0.13  4.82 -379.03 -371.44 -368.01 -365.05 -360.04  1486\n          Rhat\na_p[1]       1\na_p[2]       1\na_p[3]       1\na_p[4]       1\na_p[5]       1\na_p[6]       1\na_p[7]       1\na_p[8]       1\na_p[9]       1\na_p[10]      1\na_p[11]      1\na_p[12]      1\nb_p[1]       1\nb_p[2]       1\nb_p[3]       1\nb_p[4]       1\nb_p[5]       1\nb_p[6]       1\nb_p[7]       1\nb_p[8]       1\nb_p[9]       1\nb_p[10]      1\nb_p[11]      1\nb_p[12]      1\nc_p[1]       1\nc_p[2]       1\nc_p[3]       1\nc_p[4]       1\nc_p[5]       1\nc_p[6]       1\nc_p[7]       1\nc_p[8]       1\nc_p[9]       1\nc_p[10]      1\nc_p[11]      1\nc_p[12]      1\nd            1\nd_max0       1\nsigma        1\nsigma_d      1\nt_opt[1]     1\nt_opt[2]     1\nt_opt[3]     1\nt_opt[4]     1\nt_opt[5]     1\nt_opt[6]     1\nt_opt[7]     1\nt_opt[8]     1\nt_opt[9]     1\nt_opt[10]    1\nt_opt[11]    1\nt_opt[12]    1\nd_max[1]     1\nd_max[2]     1\nd_max[3]     1\nd_max[4]     1\nd_max[5]     1\nd_max[6]     1\nd_max[7]     1\nd_max[8]     1\nd_max[9]     1\nd_max[10]    1\nd_max[11]    1\nd_max[12]    1\nlp__         1\n\nSamples were drawn using NUTS(diag_e) at Fri Aug 23 13:50:25 2024.\nFor each parameter, n_eff is a crude measure of effective sample size,\nand Rhat is the potential scale reduction factor on split chains (at \nconvergence, Rhat=1).\n\n\n\n\nCode\nbayesplot::mcmc_areas_ridges(f_dist, regex_pars = \"t_opt\")\n\n\n\n\n\n\n\nCode\nbayesplot::mcmc_areas_ridges(f_dist, regex_pars = \"d_max\")\n\n\n\n\n\n\n\nCode\nbayesplot::mcmc_hist(f_dist, pars = \"d\")\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\nCode\nbayesplot::mcmc_hist(f_dist, regex_pars = \"sigma\")\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "87_ideasold.html#questions",
    "href": "87_ideasold.html#questions",
    "title": "Old ideas",
    "section": "Questions",
    "text": "Questions\n\nWhat is the effect of logging intensity on biodiversity [change], and how does it change through time? [tipping point?]\nHow does this relationship vary depending on abiotic factors? \nWhat is the effect of logging intensity on biodiversity [change] of different cohorts (newcomers vs survivors, by size class), and how does it change through time?"
  },
  {
    "objectID": "87_ideasold.html#hypotheses",
    "href": "87_ideasold.html#hypotheses",
    "title": "Old ideas",
    "section": "Hypotheses",
    "text": "Hypotheses\n\nA positive hump-shaped relationship between post-logging diversity and logging intensity\nIn some sites/ecosystems (Misiones, fertile sites, etc) there is an invasion of fast-growing species (lianas, bamboo, Marantaceae) that displaces the hump/threshold to lower disturbance levels\nSpecies richness of survivors decreases with logging intensity\nA (positive) hump-shaped relationship between the diversity of newcomers and logging intensity; the height of the hump increases with the diversity of the surrounding forest (and thus the seed bank)\nA more diverse landscape will lead to a higher + delayed hump in the post-logging diversity - intensity relationship"
  },
  {
    "objectID": "87_ideasold.html#data",
    "href": "87_ideasold.html#data",
    "title": "Old ideas",
    "section": "Data",
    "text": "Data\n\nDiversity metrics (+ composition) for all cohorts (newcomers, survivors, by size class, e.g. &gt;10, &gt;30, &gt;X) for each census\nLogging intensity: % basal area or volume lost (see metadata table)\nLandscape variables: forest cover, etc. \nWherever available: liana infestation index, invasive species, etc. \nAbiotic factors: climate, soil, other disturbances (storms, fire, droughts)"
  },
  {
    "objectID": "87_ideasold.html#analyses",
    "href": "87_ideasold.html#analyses",
    "title": "Old ideas",
    "section": "Analyses",
    "text": "Analyses\n\nDecompose the diversity into cohorts: alpha diversity of newcomers and survivors; compare them with the beta diversity ; the gamma diversity is the diversity of the whole community. \nComparing different biodiversity (and composition) metrics and interpreting the difference in the responses. \nControl for the effect of biogeography. \nGroup trees based on dbh quantiles (or large classes, e.g. &gt;10, &gt;30, &gt;X) &gt; alpha diversity and beta diversity of the groups"
  },
  {
    "objectID": "87_ideasold.html#figures",
    "href": "87_ideasold.html#figures",
    "title": "Old ideas",
    "section": "Figures",
    "text": "Figures\n\n\nCode\nknitr::include_graphics(\"figures/ideas_fig1.png\")\n\n\n\n\n\nFigure idea 1.\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"figures/ideas_fig2.png\")\n\n\n\n\n\nFigure idea 2.\n\n\n\n\n\n\nCode\nknitr::include_graphics(\"https://www.science.org/cms/10.1126/science.1060284/asset/cf9f95ad-db5a-4333-85e8-85fad1f11312/assets/graphic/se4519941002.jpeg\")\n\n\n\n\n\nFigure idea 3."
  },
  {
    "objectID": "96_literature.html#to-add",
    "href": "96_literature.html#to-add",
    "title": "Literature",
    "section": "To add",
    "text": "To add\n\nSchmitt et al. (2020)"
  },
  {
    "objectID": "96_literature.html#lemoine2020",
    "href": "96_literature.html#lemoine2020",
    "title": "Literature",
    "section": "Lemoine (2020)",
    "text": "Lemoine (2020)\n\n\n\n\n\n\n\nLemoine, Nathan P. 2020. “Unifying Ecosystem Responses to Disturbance into a Single Statistical Framework.” Oikos 130 (3): 408–21. https://doi.org/10.1111/oik.07752.\n\n\nSchmitt, Sylvain, Isabelle Maréchaux, Jerome Chave, Fabian Jörg Fischer, Camille Piponiot, Stéphane Traissac, and Bruno Hérault. 2020. “Functional Diversity Improves Tropical Forest Resilience: Insights from a Long-Term Virtual Experiment.” Edited by Lorena Gomez-Aparicio. Journal of Ecology 108 (3): 831–43. https://doi.org/10.1111/1365-2745.13320."
  },
  {
    "objectID": "97_meeting.html#kick-off",
    "href": "97_meeting.html#kick-off",
    "title": "Meetings",
    "section": "24/04/10 - Kick-off",
    "text": "24/04/10 - Kick-off\nNatalia, David, Geno, Mithila, Sylvain\n\nWe need to standardise biodiversity variation across sites for comparisons because base diversity will vary biogeographically. Same for logging intensity.\nWe can compare post-logging biodiversity state / trajectory to either prelogging inventories or control plots. In preliminary analyses we wish to do all.\n! We need to take care not to overstep with the second group about recovery rates !\nFor that we will focus on biodiversity more in depth including richness, evenness, composition, functional diversity, even phylogenetic diversity?\nWe need to find what we will add to the current literature, so we have a need of review\nNext tasks are:\n\nMore literature review, knowing that Mithila is working on a general review (we will use a folder on the drive to share articles and the literature chapter of this book to list relevant references and maybe summarise a bit of ideas)\nDeveloping the ideas\nDeveloping the data (Sylvain’s suggestion)\nLearn Git / GitHub / …\n\nNewt meeting should be held after the GitHub course. We aim at bimonthly meeting knowing that some month might be more complicated due to holidays."
  },
  {
    "objectID": "97_meeting.html#conceptual-framework",
    "href": "97_meeting.html#conceptual-framework",
    "title": "Meetings",
    "section": "24/06/04 - Conceptual framework",
    "text": "24/06/04 - Conceptual framework\nDavid, Geno, Mithila, Sylvain\n\nDavid: Disturbing hypotheses in tropical forests by Sheil and Burlsem 2003 = &gt; Intermediate Disturbance Hypotheses (IDH) Fig 1. varying with time, frequency, and size/intesnity + multiple scales and structure but a signle underlying hpothesis\nDavid: Molino & Sabatier 2021 =&gt; some evidences\nMithila: available data for exploration from Lucas, Geno, Géraldine and Irié\nGeno: Add phylogenetic diveristy and is there a limit of IDH for very rich forest, at least for richness?\nDavid: ++ phylogenetic diversity\nMithila: meetings every two weeks Tuesday 2 pm CET\nDavid: with a precise objective and even if only two of us"
  },
  {
    "objectID": "97_meeting.html#conceptual-framework-1",
    "href": "97_meeting.html#conceptual-framework-1",
    "title": "Meetings",
    "section": "24/07/16- Conceptual framework",
    "text": "24/07/16- Conceptual framework\nDavid, Geno, Verginia, Sylvain\n\nrecap of the meeting of July 2nd where Mithila shared some figures and how some data do not make sense-more information is needed from the Site PIs, some of the harmonized data are still not in the desired format; maybe an extra step is needed between harmonized and the aggregated data\nDavid started to write the framework with support from Geno–&gt; see ideas\ndiscussion on what meta data is needed to continue the analysis; To Do: List what meta data is needed and communicate this to the site PIs or other\nVerginia shared two documents via email from past TmFO meetings; one concerns meta data from sites and the other is a word doc of data analysis for a biodiversity study, the research questions in the protocol can support this analysis\nstart listing the different diversity measures/parameters to take into account for the analysis\nResearch questions can be further expanded to more specific research questions; also include main objectives of the study\nSylvan shared paper by Mirabel et al 2020, on what graphs we expect from the analysis, see email with attached paper\nGeno will or already shared additional data of the data set with Mithila, concerns logging information\nHow to define logging damage, what parameters will be used\nwhat will be used relative measure of diversity or absolute measure of diversity?"
  },
  {
    "objectID": "98_contributing.html#git",
    "href": "98_contributing.html#git",
    "title": "Contributing",
    "section": "Git",
    "text": "Git\nFirst you’ll need a local installation of Git on your machine.\n\nGit (/ɡɪt/)[8] is a distributed version control system[9] that tracks changes in any set of computer files, usually used for coordinating work among programmers who are collaboratively developing source code during software development. Wikipedia\n\nYou can download and install Git from https://git-scm.com/. If you are looking for more information on Git than the one below I recommend this simple guide: https://rogerdudler.github.io/git-guide/."
  },
  {
    "objectID": "98_contributing.html#github",
    "href": "98_contributing.html#github",
    "title": "Contributing",
    "section": "GitHub",
    "text": "GitHub\nThen you’ll need an account on GitHub.\n\nGitHub (/ˈɡɪthʌb/[a]) is a developer platform that allows developers to create, store, manage and share their code. Wikipedia\n\nSimply go on https://github.com/ and open an account."
  },
  {
    "objectID": "98_contributing.html#fork-the-repository",
    "href": "98_contributing.html#fork-the-repository",
    "title": "Contributing",
    "section": "Fork the repository",
    "text": "Fork the repository\nThen you’ll need to create a copy of the project. Project in Git are stored in repository. The repository versions follow a tree. Creating a copy is then called a fork. To do so, go on the repository page: https://github.com/Bioforest-project/LoggingDiversity . Then use the button on the top right named “Fork” to fork the repository. I recommend you don’t change the name of your copy. More help an be found here: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo."
  },
  {
    "objectID": "98_contributing.html#clone-your-fork",
    "href": "98_contributing.html#clone-your-fork",
    "title": "Contributing",
    "section": "Clone your fork",
    "text": "Clone your fork\nGreat you have an online copy of the project on GitHub, but to work with it on your machine you’ll want a local copy. For that you will want to have a “clone” of the project online locally, and this is called a clone in GitHub too. There are different way of cloning your repository with the green button “&lt;&gt; Code” as explained here: https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository. If you are a windows user discovering all this process, I recommend that you use GitHub Desktop to manage GitHub on your desktop. GitHub Desktop can be found here and is pretty straightforward to use: https://desktop.github.com/. Most command that I will cite later, such as fork or clone, can be found directly inside GitHub Desktop."
  },
  {
    "objectID": "98_contributing.html#r",
    "href": "98_contributing.html#r",
    "title": "Contributing",
    "section": "R",
    "text": "R\nIf you don’t have it already you’ll need to install the R programming language.\n\nR is a programming language for statistical computing and data visualization. It has been adopted in the fields of data mining, bioinformatics, and data analysis.[8] Wikipedia\n\nYou can find it here: https://www.r-project.org/. I recommend that you use a version above 4.0.0."
  },
  {
    "objectID": "98_contributing.html#rstudio",
    "href": "98_contributing.html#rstudio",
    "title": "Contributing",
    "section": "Rstudio",
    "text": "Rstudio\nSimilarly, of you don’t have it already, I recommend that you use R in the RStudio integrated development environment (IDE), besides other IDE such as Visual Code Studio can be used too.\n\nRStudio is an integrated development environment for R, a programming language for statistical computing and graphics. Wikipedia\n\nYou can find RStudio here: https://posit.co/products/open-source/rstudio/."
  },
  {
    "objectID": "98_contributing.html#renv",
    "href": "98_contributing.html#renv",
    "title": "Contributing",
    "section": "renv",
    "text": "renv\nOnce R and Rstudio installed, you can launch Rstudio and install the renv library to manage all needed library for the project. Indeed the project is built using renv to improve reproducibility and collaborative work.\n\nThe renv package helps you create reproducible environments for your R projects. https://rstudio.github.io/renv/articles/renv.html\n\nTo do so you can type in a terminal:\ninstall.pacakges(\"renv\")"
  },
  {
    "objectID": "98_contributing.html#use-the-repository",
    "href": "98_contributing.html#use-the-repository",
    "title": "Contributing",
    "section": "Use the repository",
    "text": "Use the repository\nGreat! Now you are all set-up to work with the project. For that go in your project folder LoggingDiversity/ (there is a short-cut to open the folder in GitHub Desktop). Then you can open it by double clicking the RStudio project file called LoggingDiversity.Rmd.\nFirst you need to install all the packages with renv using:\nrenv::restore()\nIt can be a bit long the first time because it’s setting up the whole environment but will be faster the next time.\nThen as described in the README, you can use the scripts in data/ to generate the data needed to run the project (for the moment only dummy data are available, and data access should be improved later).\nThen you can have a look, modify, or edit text of the analyses. All the analyses are done in the Quarto documents file.qmd. Quarto are reproducible documents that mix text and code and that are the basis of the online pages that you are reading right now. More information on Quarto can be found here: https://quarto.org/.\nOnce you are in a Quarto file, for instance this page corresponds to 98_contributing.qmd, you can add text directly in the document and add R code in the form of chunks using CTRL+ALT+I, or the insert menu for executable cell, or the top right green button in RStudio. You can run the small chunk of code with the green arrow or with CTRL+ENTER as in any R script. To see the resulting document you can use the “Render” button in Rstudio or CTRL+SHIFT+K. Once you’ve finished updating the pages of different documents you can regenerate the whole numerical book in the “Build” panel with the “Render Book” button or CTRL+SHIFT+B."
  },
  {
    "objectID": "98_contributing.html#commit",
    "href": "98_contributing.html#commit",
    "title": "Contributing",
    "section": "Commit",
    "text": "Commit\nOnce you have done modifications that you want to save you can “commit” using Git. It means that you create a new version of your project. For that you can use either GitHub Desktop or the “Git” panel in Rstudio.\nFor Rstudio, in the “Git” panel, check the box of all files for which you want to save informations (but you may ignore some for later). The click on commit. In the pop-up window, add a commit message and click on commit to create a new version.\nCongrats! You contributed locally to the project and created a new version tracked by Git."
  },
  {
    "objectID": "98_contributing.html#push",
    "href": "98_contributing.html#push",
    "title": "Contributing",
    "section": "Push",
    "text": "Push\nNow that you have a new version locally, or several, you may want to save them online. This is called “push” in Git, because you are pushing your local clone to your online repository or “remote” in Git. To do so you can either use GitHub Desktop or the “Git” panel in Rstudio. For Rstudio, in the “Git” panel, use the “Push” green arrow. Then have a look to your online repository, you should have all your changes available online."
  },
  {
    "objectID": "98_contributing.html#pull-request",
    "href": "98_contributing.html#pull-request",
    "title": "Contributing",
    "section": "Pull request",
    "text": "Pull request\nGreat, no you have contributed to the project on your machine and saved a copy online on GitHub. However, you don’t have actually contributed to the original project yet: https://github.com/Bioforest-project/LoggingDiversity/tree/main . To do so you need to ask to send your changes to the main project/repository for us to review them and merge them. In Git/GitHub this is called a “Pull Request” because you are requesting that we pull your code into ours. To do so simply follow this guide: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request. Once your pull request is submitted let us handle it. It will open a dialogue page where we can exchange about your modification. We will discuss it with you, and if we all agree your contribution will be merged into the main repository and you will be listed as a project contributor, kudos!"
  },
  {
    "objectID": "98_contributing.html#synchronize-fork",
    "href": "98_contributing.html#synchronize-fork",
    "title": "Contributing",
    "section": "Synchronize fork",
    "text": "Synchronize fork\nLast but not least, if you’ve followed until here, you might have a question: “but what happens if you make changes to the project while I make changes myself?”. Don’t worry Git and GitHub are made for that. At some points if you see that we have made major changes to the project on the main repository and you want to have them back in your fork online and your clone locally you can “Synchronize your fork”: https://docs.github.com/fr/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork."
  },
  {
    "objectID": "98_contributing.html#help",
    "href": "98_contributing.html#help",
    "title": "Contributing",
    "section": "Help",
    "text": "Help\nIf you need help to contribute please preferentially create an issue on GitHub: https://github.com/Bioforest-project/LoggingDiversity/issues. You may however reach us by mail with people from the core group."
  },
  {
    "objectID": "98_contributing.html#contributing-to-this-page",
    "href": "98_contributing.html#contributing-to-this-page",
    "title": "Contributing",
    "section": "Contributing to this page",
    "text": "Contributing to this page\nThis help pages is a test and a work in progress. I’ll try to expand it following help demands in issues. However, if you have any tips or resources that you got while following it, don’t hesitate to add it to the document for the users and next readers.\nHave a nice testing, writing or coding 😉,\nSylvain"
  },
  {
    "objectID": "99_references.html",
    "href": "99_references.html",
    "title": "References",
    "section": "",
    "text": "Jin, Yi, and Hong Qian. 2019. “V.PhyloMaker: An R Package That Can\nGenerate Very Large Phylogenies for Vascular Plants.”\nEcography 42 (8): 1353–59. https://doi.org/10.1111/ecog.04434.\n\n\nLemoine, Nathan P. 2020. “Unifying Ecosystem Responses to\nDisturbance into a Single Statistical Framework.” Oikos\n130 (3): 408–21. https://doi.org/10.1111/oik.07752.\n\n\nSchmitt, Sylvain, Bruno Hérault, and Géraldine Derroire. 2023.\n“High Intraspecific Growth Variability Despite Strong Evolutionary\nLegacy in an Amazonian Forest.” Ecology Letters 26 (12):\n2135–46. https://doi.org/10.1111/ele.14318.\n\n\nSchmitt, Sylvain, Isabelle Maréchaux, Jerome Chave, Fabian Jörg Fischer,\nCamille Piponiot, Stéphane Traissac, and Bruno Hérault. 2020.\n“Functional Diversity Improves Tropical Forest Resilience:\nInsights from a Long-Term Virtual Experiment.”\nEdited by Lorena Gomez-Aparicio. Journal of Ecology 108 (3):\n831–43. https://doi.org/10.1111/1365-2745.13320.\n\n\nSmith, Stephen A., and Joseph W. Brown. 2018. “Constructing a\nBroadly Inclusive Seed Plant Phylogeny.” American Journal of\nBotany 105 (3): 302–14. https://doi.org/10.1002/ajb2.1019.\n\n\nZanne, Amy E., David C. Tank, William K. Cornwell, Jonathan M. Eastman,\nStephen A. Smith, Richard G. FitzJohn, Daniel J. McGlinn, et al. 2013.\n“Three Keys to the Radiation of Angiosperms into Freezing\nEnvironments.” Nature 506 (7486): 89–92. https://doi.org/10.1038/nature12872."
  }
]